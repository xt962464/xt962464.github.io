<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>微服务 spring gateway+nacos +security+JWT 认证授权</title>
      <link href="xt/b98e.html"/>
      <url>xt/b98e.html</url>
      
        <content type="html"><![CDATA[<p><strong>前言:</strong><br>    版本信息:</p><ul><li>springboot:  <strong>2.3.0.RELEASE</strong></li><li>Spring Cloud Hoxton:  <strong>Hoxton.SR3</strong></li><li>Spring Cloud Alibaba:  <strong>2.2.1.RELEASE</strong></li></ul><h2 id="一-涉及到的微服务模块以及技术有"><a href="#一-涉及到的微服务模块以及技术有" class="headerlink" title="一.涉及到的微服务模块以及技术有:"></a>一.涉及到的微服务模块以及技术有:</h2><h2 id="1-微服务"><a href="#1-微服务" class="headerlink" title="1.微服务"></a>1.微服务</h2><ol><li>管理员资源服务</li><li>app用户资源服务</li><li>网关</li><li>认证中心</li><li>公共资源服务<h2 id="2-技术或组件"><a href="#2-技术或组件" class="headerlink" title="2.技术或组件"></a>2.技术或组件</h2></li><li>spring gateway—-网关</li><li>alibaba nacos —–注册中心</li><li>spring security ——认证授权</li><li>jwt  ———————生成token</li><li>mybatis plus ———持久层框架</li><li>my sql  —————–数据存储</li><li>Feign —————–服务间的远程调用</li></ol><h1 id="二-实现的功能"><a href="#二-实现的功能" class="headerlink" title="二.实现的功能:"></a>二.实现的功能:</h1><h2 id="1-网关"><a href="#1-网关" class="headerlink" title="1.网关"></a>1.网关</h2><blockquote><p> 统一系统接口入口,在<strong>网关</strong>进行<strong>鉴权</strong>操作,<br> (取出token中的权限信息进行鉴权)<br> <strong>默认负载均衡策略为:轮询策略</strong></p></blockquote><h2 id="2-接口设计"><a href="#2-接口设计" class="headerlink" title="2.接口设计"></a>2.接口设计</h2><h3 id="2-1-三组资源"><a href="#2-1-三组资源" class="headerlink" title="2.1 三组资源:"></a>2.1 三组资源:</h3><ol><li>admin资源,</li><li>用户资源,</li><li>公共资源</li></ol><h4 id="1-admin资源"><a href="#1-admin资源" class="headerlink" title="(1).admin资源:"></a>(1).admin资源:</h4><p>自然是只有admin角色才可访问</p><h4 id="2-用户资源"><a href="#2-用户资源" class="headerlink" title="(2).用户资源:"></a>(2).用户资源:</h4><p><strong>分别有</strong></p><ol><li>用户访问资源</li><li>admin访问资源(需要有admin角色可访问)</li></ol><h4 id="3-公共资源"><a href="#3-公共资源" class="headerlink" title="(3).公共资源"></a>(3).公共资源</h4><p>略…..</p><p><strong>3.认证中心</strong></p><blockquote><p>进行登录用户的认证授权,返回用户名和token的json数据,<br>权限信息放在token中</p></blockquote><p><strong>4.其他服务</strong></p><blockquote><p>顾名思义</p></blockquote><p><strong>5.接口url设计</strong><br><strong>注:<br>app接口需要拥有user角色的用户才可访问<br>admin接口需要拥有admin角色才可访问</strong></p><blockquote><p><strong>app接口:</strong>      <strong>/前缀/api-服务名/v1/api/**</strong><br><strong>admin接口:</strong>  <strong>/前缀/api-服务名/v1/admin/**</strong></p></blockquote><p><strong>5.项目服务</strong><br><img src="https://img-blog.csdnimg.cn/20201128204100807.png" alt="项目结构"></p><h1 id="三-数据表设计"><a href="#三-数据表设计" class="headerlink" title="三.数据表设计"></a>三.数据表设计</h1><p><img src="https://img-blog.csdnimg.cn/2020112821375196.png" alt="数据表设计"></p><h1 id="四-代码实现"><a href="#四-代码实现" class="headerlink" title="四:代码实现"></a>四:代码实现</h1><h2 id="1-项目父工程"><a href="#1-项目父工程" class="headerlink" title="1.项目父工程"></a>1.项目父工程</h2><h3 id="1-依赖"><a href="#1-依赖" class="headerlink" title="(1).依赖"></a>(1).依赖</h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>properties</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>java.version</span><span class="token punctuation">></span></span>1.8<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>java.version</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>properties</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>packaging</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>packaging</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.projectlombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>lombok<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>optional</span><span class="token punctuation">></span></span>true<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>optional</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>test<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencyManagement</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- Spring Cloud Hoxton --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>Hoxton.SR3<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>        <span class="token comment">&lt;!-- Spring Cloud Alibaba --></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-alibaba-dependencies<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>type</span><span class="token punctuation">></span></span>pom<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>type</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>scope</span><span class="token punctuation">></span></span>import<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>scope</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencyManagement</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="2-网关"><a href="#2-网关" class="headerlink" title="2.网关"></a>2.网关</h2><p><img src="https://img-blog.csdnimg.cn/20201128205041128.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="网关"></p><h3 id="1-依赖-1"><a href="#1-依赖-1" class="headerlink" title="(1).依赖"></a>(1).依赖</h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--项目公共模块--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.qiongqi.taoyiquan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>taoyiquan-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-security-jwt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>validation-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-gateway<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>fastjson<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.2.62<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-yml配置"><a href="#2-yml配置" class="headerlink" title="(2).yml配置"></a>(2).yml配置</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8849</span><span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> taoyiquan<span class="token punctuation">-</span>gateway  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span>    <span class="token key atrule">gateway</span><span class="token punctuation">:</span>      <span class="token key atrule">routes</span><span class="token punctuation">:</span>        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> taoyiquan<span class="token punctuation">-</span>admin          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//taoyiquan<span class="token punctuation">-</span>admin <span class="token comment"># lb: 使用负载均衡策略  默认应该是轮询策略</span>          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/admin/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=1        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> taoyiquan<span class="token punctuation">-</span>user          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//taoyiquan<span class="token punctuation">-</span>user          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/user/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=1        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> taoyiquan<span class="token punctuation">-</span>auth          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//taoyiquan<span class="token punctuation">-</span>auth          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/auth/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=1        <span class="token punctuation">-</span> <span class="token key atrule">id</span><span class="token punctuation">:</span> taoyiquan<span class="token punctuation">-</span>taobao          <span class="token key atrule">uri</span><span class="token punctuation">:</span> lb<span class="token punctuation">:</span>//taoyiquan<span class="token punctuation">-</span>taobao          <span class="token key atrule">predicates</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> Path=/taobao/<span class="token important">**</span>          <span class="token key atrule">filters</span><span class="token punctuation">:</span>            <span class="token punctuation">-</span> StripPrefix=1<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-security配置"><a href="#3-security配置" class="headerlink" title="(3).security配置"></a>(3).security配置</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: security配置 * @author: ※狗尾巴草 * @date: 2020-11-26 12:01 **/</span><span class="token annotation punctuation">@EnableWebFluxSecurity</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeAuthenticationEntryPoint</span> authenticationEntryPoint<span class="token punctuation">;</span>    <span class="token comment">//security的鉴权排除的url列表</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> excludedAuthPages <span class="token operator">=</span> <span class="token punctuation">&#123;</span>            <span class="token string">"/auth/api-auth/v1/login"</span><span class="token punctuation">,</span><span class="token comment">//登录</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token class-name">SecurityWebFilterChain</span> <span class="token function">securityFilterChain</span><span class="token punctuation">(</span><span class="token class-name">ServerHttpSecurity</span> http<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        http                <span class="token punctuation">.</span><span class="token function">authorizeExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token comment">// 需要权限访问de接口</span>                <span class="token punctuation">.</span><span class="token function">pathMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin/**"</span><span class="token punctuation">,</span><span class="token string">"/user/api-user/*/admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XTReactiveAuthorizationManager</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">pathMatchers</span><span class="token punctuation">(</span><span class="token string">"/user/api-user/*/api/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">access</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XTReactiveAuthorizationManager</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">,</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment">//无需权限访问</span><span class="token comment">//                .pathMatchers(excludedAuthPages).permitAll()  //无需进行权限过滤的请求路径</span><span class="token comment">//                .pathMatchers(HttpMethod.OPTIONS).permitAll() //option 请求默认放行</span>                <span class="token punctuation">.</span><span class="token function">anyExchange</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//无需权限访问</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">httpBasic</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//                .authenticationEntryPoint()</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span><span class="token comment">// 匿名访问</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//必须支持跨域</span>                <span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span>        <span class="token punctuation">;</span>        <span class="token class-name">SecurityWebFilterChain</span> chain <span class="token operator">=</span> http<span class="token punctuation">.</span><span class="token function">build</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">WebFilter</span><span class="token punctuation">></span></span> weIterable <span class="token operator">=</span> chain<span class="token punctuation">.</span><span class="token function">getWebFilters</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toIterable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">while</span><span class="token punctuation">(</span>weIterable<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">WebFilter</span> f <span class="token operator">=</span> weIterable<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>f <span class="token keyword">instanceof</span> <span class="token class-name">AuthenticationWebFilter</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">AuthenticationWebFilter</span> webFilter <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">AuthenticationWebFilter</span><span class="token punctuation">)</span> f<span class="token punctuation">;</span>                <span class="token comment">//将自定义的AuthenticationConverter添加到过滤器中</span>                webFilter<span class="token punctuation">.</span><span class="token function">setServerAuthenticationConverter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">XTAuthenticationConverter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> chain<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">ReactiveAuthenticationManager</span> <span class="token function">reactiveAuthenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">ReactiveAuthenticationManagerAdapter</span><span class="token punctuation">(</span><span class="token punctuation">(</span>authentication<span class="token punctuation">)</span><span class="token operator">-></span><span class="token punctuation">&#123;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>authentication <span class="token keyword">instanceof</span> <span class="token class-name">XTAccountAuthentication</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token class-name">XTAccountAuthentication</span> gmAccountAuthentication <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">XTAccountAuthentication</span><span class="token punctuation">)</span> authentication<span class="token punctuation">;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span>gmAccountAuthentication<span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    authentication<span class="token punctuation">.</span><span class="token function">setAuthenticated</span><span class="token punctuation">(</span><span class="token boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">return</span> authentication<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                    <span class="token keyword">return</span> authentication<span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> authentication<span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-取出token中的权限信息"><a href="#4-取出token中的权限信息" class="headerlink" title="(4).取出token中的权限信息"></a>(4).取出token中的权限信息</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 取出token中的权限信息 * @author: ※狗尾巴草 * @date: 2020-11-27 23:12 **/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XTAuthenticationConverter</span> <span class="token keyword">extends</span> <span class="token class-name">ServerFormLoginAuthenticationConverter</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Logger</span> logger <span class="token operator">=</span> <span class="token class-name">LoggerFactory</span><span class="token punctuation">.</span><span class="token function">getLogger</span><span class="token punctuation">(</span><span class="token class-name">XTAuthenticationConverter</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Authentication</span><span class="token punctuation">></span></span> <span class="token function">convert</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"从token中获取登陆用户信息"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//从token中获取登陆用户信息</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> tokenList <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>tokenList<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"用户认证信息为空,返回获取认证信息失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> token <span class="token operator">=</span> tokenList<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SimpleGrantedAuthority</span><span class="token punctuation">></span></span> simpleGrantedAuthorities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//获取权限信息</span>            <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span><span class="token function">checkJWT</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                logger<span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token string">"用户认证信息为空,返回获取认证信息失败"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> roles <span class="token operator">=</span> <span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span><span class="token function">getUserRole</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">if</span><span class="token punctuation">(</span>roles<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"token过期"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">empty</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>            roles<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>role <span class="token operator">-></span><span class="token punctuation">&#123;</span>                <span class="token class-name">SimpleGrantedAuthority</span> auth <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">SimpleGrantedAuthority</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">;</span>                simpleGrantedAuthorities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>auth<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token comment">//添加用户信息到spring security之中。</span>            <span class="token class-name">XTAccountAuthentication</span>  xinyueAccountAuthentication <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">XTAccountAuthentication</span><span class="token punctuation">(</span><span class="token keyword">null</span><span class="token punctuation">,</span> token<span class="token punctuation">,</span> simpleGrantedAuthorities<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">just</span><span class="token punctuation">(</span>xinyueAccountAuthentication<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>XTAccountAuthentication类</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 说明 * @author: ※狗尾巴草 * @date: 2020-11-27 23:13 **/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XTAccountAuthentication</span> <span class="token keyword">extends</span> <span class="token class-name">AbstractAuthenticationToken</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token keyword">final</span> <span class="token keyword">long</span> serialVersionUID <span class="token operator">=</span> <span class="token number">1L</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Object</span> credentials<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> principal<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">XTAccountAuthentication</span><span class="token punctuation">(</span><span class="token class-name">Object</span> credentials<span class="token punctuation">,</span><span class="token class-name">String</span> principal<span class="token punctuation">,</span><span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">></span></span> authorities<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>authorities<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>credentials <span class="token operator">=</span> credentials<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>principal <span class="token operator">=</span> principal<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">getCredentials</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>credentials<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">this</span><span class="token punctuation">.</span>principal<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-鉴权"><a href="#5-鉴权" class="headerlink" title="(5).鉴权"></a>(5).鉴权</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 鉴权 * @author: ※狗尾巴草 * @date: 2020-11-27 21:46 **/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">XTReactiveAuthorizationManager</span> <span class="token keyword">implements</span> <span class="token class-name">ReactiveAuthorizationManager</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthorizationContext</span><span class="token punctuation">></span></span>  <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> authorities <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">XTReactiveAuthorizationManager</span><span class="token punctuation">(</span><span class="token class-name">String</span> authority<span class="token punctuation">,</span> <span class="token class-name">String</span><span class="token punctuation">.</span><span class="token punctuation">.</span><span class="token punctuation">.</span> authorities <span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>authorities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"ROLE_"</span> <span class="token operator">+</span> authority<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>authorities <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> auth <span class="token operator">:</span> authorities<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">this</span><span class="token punctuation">.</span>authorities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token string">"ROLE_"</span> <span class="token operator">+</span> auth<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">AuthorizationDecision</span><span class="token punctuation">></span></span> <span class="token function">check</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Authentication</span><span class="token punctuation">></span></span> authentication<span class="token punctuation">,</span> <span class="token class-name">AuthorizationContext</span> authorizationContext<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> authentication                <span class="token punctuation">.</span><span class="token function">filter</span><span class="token punctuation">(</span>a <span class="token operator">-></span> a<span class="token punctuation">.</span><span class="token function">isAuthenticated</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">flatMapIterable</span><span class="token punctuation">(</span>a <span class="token operator">-></span> a<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>g <span class="token operator">-></span> g<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">any</span><span class="token punctuation">(</span>c <span class="token operator">-></span> <span class="token punctuation">&#123;</span>                    <span class="token comment">//检测权限是否匹配</span>                    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"角色: "</span> <span class="token operator">+</span> c<span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">if</span> <span class="token punctuation">(</span>authorities<span class="token punctuation">.</span><span class="token function">contains</span><span class="token punctuation">(</span>c<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                    <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>NO_PERMISSION<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>NO_PERMISSION<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token comment">//权限不足,抛出异常</span>                    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AccessDeniedException</span><span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">map</span><span class="token punctuation">(</span>hasAuthority <span class="token operator">-></span> <span class="token keyword">new</span> <span class="token class-name">AuthorizationDecision</span><span class="token punctuation">(</span>hasAuthority<span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">defaultIfEmpty</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">AuthorizationDecision</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-统一异常捕获"><a href="#6-统一异常捕获" class="headerlink" title="(6).统一异常捕获"></a>(6).统一异常捕获</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 网关异常通用处理器，只作用在webflux 环境下 * @author: ※狗尾巴草 * @date: 2020-11-28 16:28 **/</span><span class="token annotation punctuation">@Order</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token annotation punctuation">@RequiredArgsConstructor</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">GlobalExceptionConfiguration</span> <span class="token keyword">implements</span> <span class="token class-name">ErrorWebExceptionHandler</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">final</span> <span class="token class-name">ObjectMapper</span> objectMapper<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">></span></span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">Throwable</span> ex<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"发生异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ServerHttpResponse</span> response <span class="token operator">=</span> exchange<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>response<span class="token punctuation">.</span><span class="token function">isCommitted</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span>ex<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//设置响应头的数据类型,applicaion/json模式,返回json数据</span>        response<span class="token punctuation">.</span><span class="token function">getHeaders</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>ex <span class="token keyword">instanceof</span> <span class="token class-name">ResponseStatusException</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            response<span class="token punctuation">.</span><span class="token function">setStatusCode</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">ResponseStatusException</span><span class="token punctuation">)</span> ex<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getStatus</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> response                <span class="token punctuation">.</span><span class="token function">writeWith</span><span class="token punctuation">(</span><span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">fromSupplier</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token operator">-></span> <span class="token punctuation">&#123;</span>                    <span class="token class-name">DataBufferFactory</span> bufferFactory <span class="token operator">=</span> response<span class="token punctuation">.</span><span class="token function">bufferFactory</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>                        <span class="token keyword">return</span> bufferFactory<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span>objectMapper<span class="token punctuation">.</span><span class="token function">writeValueAsBytes</span><span class="token punctuation">(</span>ex<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span> <span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">JsonProcessingException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token comment">//                        log.warn("Error writing response", ex);</span>                        <span class="token keyword">return</span> bufferFactory<span class="token punctuation">.</span><span class="token function">wrap</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token keyword">byte</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-无权限处理"><a href="#7-无权限处理" class="headerlink" title="(7).无权限处理"></a>(7).无权限处理</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 匿名用户访问无权限资源时的异常 * @author: ※狗尾巴草 * @date: 2020-11-13 14:15 **/</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomizeAuthenticationEntryPoint</span> <span class="token keyword">implements</span> <span class="token class-name">ServerAuthenticationEntryPoint</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Mono</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Void</span><span class="token punctuation">></span></span> <span class="token function">commence</span><span class="token punctuation">(</span><span class="token class-name">ServerWebExchange</span> exchange<span class="token punctuation">,</span> <span class="token class-name">AuthenticationException</span> e<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"无权限访问"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>NO_PERMISSION<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>NO_PERMISSION<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        抛出异常</span>        <span class="token keyword">return</span> <span class="token class-name">Mono</span><span class="token punctuation">.</span><span class="token function">error</span><span class="token punctuation">(</span><span class="token keyword">new</span>  <span class="token class-name">AccessDeniedException</span><span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-认证中心"><a href="#3-认证中心" class="headerlink" title="3.认证中心"></a>3.认证中心</h2><p><strong>注:<br>统一认证中心,统一登录入口,同一套规则,但是管理员数据和普通用户数据还是分表存储,暂时没找到好的办法解决,这里使用简单的方法区别管理员登录和普通用户登录,增加前缀,<br>例如<br>管理员登录,admin_111<br>用户登录: user_111</strong></p><p><img src="https://img-blog.csdnimg.cn/20201128210731170.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="认证中心"></p><h3 id="1-依赖-2"><a href="#1-依赖-2" class="headerlink" title="(1).依赖"></a>(1).依赖</h3><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependencies</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--公共模块--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.qiongqi.taoyiquan<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>taoyiquan-common<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>1.0.0-SNAPSHOT<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusions</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.baomidou<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>mybatis-plus-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-security-jwt<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>exclusion</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.validation<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>                <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>validation-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>            <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusion</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>exclusions</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token comment">&lt;!--springcloud整合的openFeign--></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-openfeign<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-web<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>com.alibaba.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-alibaba-nacos-discovery<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>2.2.1.RELEASE<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.boot<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-boot-starter-security<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>javax.servlet<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>javax.servlet-api<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span>        <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>version</span><span class="token punctuation">></span></span>4.0.1<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>version</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependencies</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="2-yml配置-1"><a href="#2-yml配置-1" class="headerlink" title="(2).yml配置"></a>(2).yml配置</h3><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">server</span><span class="token punctuation">:</span>  <span class="token key atrule">port</span><span class="token punctuation">:</span> <span class="token number">8850</span>  <span class="token key atrule">servlet</span><span class="token punctuation">:</span>    <span class="token key atrule">context-path</span><span class="token punctuation">:</span> /api<span class="token punctuation">-</span>auth<span class="token key atrule">spring</span><span class="token punctuation">:</span>  <span class="token key atrule">application</span><span class="token punctuation">:</span>    <span class="token key atrule">name</span><span class="token punctuation">:</span> taoyiquan<span class="token punctuation">-</span>auth  <span class="token key atrule">cloud</span><span class="token punctuation">:</span>    <span class="token key atrule">nacos</span><span class="token punctuation">:</span>      <span class="token key atrule">discovery</span><span class="token punctuation">:</span>        <span class="token key atrule">server-addr</span><span class="token punctuation">:</span> localhost<span class="token punctuation">:</span><span class="token number">8848</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="3-Security配置"><a href="#3-Security配置" class="headerlink" title="(3).Security配置"></a>(3).Security配置</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: Security配置 * @author: ※狗尾巴草 * @date: 2020-11-12 12:25 **/</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeAuthenticationEntryPoint</span> authenticationEntryPoint<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeAuthenticationSuccessHandler</span> successHandler<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeAuthenticationFailureHandler</span> failureHandler<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeLogoutSuccessHandler</span> logoutSuccessHandler<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span> <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 设置默认的加密方式（强hash方式加密）</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">UserDetailsService</span> <span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//获取用户账号密码及权限信息</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserDetailsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManagerBuilder</span> auth<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//配置认证方式</span>        auth<span class="token punctuation">.</span><span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//    @Override</span><span class="token comment">//    public void configure(WebSecurity web) &#123;</span><span class="token comment">//        //对于在header里面增加token等类似情况，放行所有OPTIONS请求。</span><span class="token comment">//        web.ignoring().antMatchers(HttpMethod.OPTIONS, "/**");</span><span class="token comment">//    &#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//http相关的配置，包括登入登出、异常处理、会话管理等</span>        http        <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//                .antMatchers("/user/**").hasAuthority("query_user")</span><span class="token comment">//                基于角色控制</span><span class="token comment">//                .antMatchers("/admin/**").hasAnyRole("admin")</span><span class="token comment">//                .antMatchers("/user/**").hasAnyRole("user")</span>        <span class="token comment">//登入</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">"/v1/login"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//允许所有用户</span>                <span class="token punctuation">.</span><span class="token function">successHandler</span><span class="token punctuation">(</span>successHandler<span class="token punctuation">)</span><span class="token comment">//登录成功处理逻辑</span>                <span class="token punctuation">.</span><span class="token function">failureHandler</span><span class="token punctuation">(</span>failureHandler<span class="token punctuation">)</span><span class="token comment">//登录失败处理逻辑</span><span class="token comment">//        //登出</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//允许所有用户</span>                <span class="token punctuation">.</span><span class="token function">logoutSuccessHandler</span><span class="token punctuation">(</span>logoutSuccessHandler<span class="token punctuation">)</span><span class="token comment">//登出成功处理逻辑</span>                <span class="token punctuation">.</span><span class="token function">deleteCookies</span><span class="token punctuation">(</span><span class="token string">"JSESSIONID"</span><span class="token punctuation">)</span><span class="token comment">//登出之后删除cookie</span>                <span class="token comment">//异常处理(权限拒绝、登录失效等)</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                <span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span><span class="token comment">//匿名用户访问无权限资源时的异常处理</span><span class="token comment">//                .accessDeniedHandler(accessDeniedHandler)//异常捕获</span><span class="token comment">//                .authenticationEntryPoint(new JWTAuthenticationEntryPoint())</span><span class="token comment">//        限制同一账号只能一个用户使用  会话管理</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//                .maximumSessions(1)//同一账号同时登录最大用户数</span><span class="token comment">//                .expiredSessionStrategy(sessionInformationExpiredStrategy)//会话信息过期策略会话信息过期策略(账号被挤下线)</span>        <span class="token punctuation">;</span>        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//                .addFilter(new JWTAuthenticationFilter(authenticationManager()))</span><span class="token comment">//                .addFilter(new JWTAuthorizationFilter(authenticationManager()))</span>                <span class="token comment">// 不需要session</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span><span class="token class-name">SessionCreationPolicy</span><span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>        <span class="token punctuation">;</span><span class="token comment">//        http.addFilterBefore(securityInterceptor, FilterSecurityInterceptor.class);//增加到默认拦截链中</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="4-登录认证授权"><a href="#4-登录认证授权" class="headerlink" title="(4).登录认证授权"></a>(4).登录认证授权</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 登录认证授权 * @author: ※狗尾巴草 * @date: 2020-11-13 10:00 **/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">UserDetailsServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">UserDetailsService</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> adminFeignClient adminFeignClient<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> roleFeignClient roleFeignClient<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> userFeignClient userFeignClient<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">UserDetails</span> <span class="token function">loadUserByUsername</span><span class="token punctuation">(</span><span class="token class-name">String</span> username<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">UsernameNotFoundException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//需要构造出 org.springframework.security.core.userdetails.User 对象并返回</span>        <span class="token comment">//校验验证码等操作....</span>        <span class="token comment">//</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token operator">!</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>username<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户不能为空"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">ResponseData</span> <span class="token class-name">Account</span> <span class="token operator">=</span><span class="token keyword">null</span><span class="token punctuation">;</span>                <span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> name_list <span class="token operator">=</span> username<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">"_"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//            普通用户登录</span>            <span class="token class-name">Account</span> <span class="token operator">=</span> userFeignClient<span class="token punctuation">.</span><span class="token function">getByAccount</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span> <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//            管理员登录</span>            <span class="token class-name">Account</span> <span class="token operator">=</span> adminFeignClient<span class="token punctuation">.</span><span class="token function">getByAccount</span><span class="token punctuation">(</span>name_list<span class="token punctuation">[</span><span class="token number">1</span><span class="token punctuation">]</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">LinkedHashMap</span> data <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">LinkedHashMap</span><span class="token punctuation">)</span> <span class="token class-name">Account</span><span class="token punctuation">.</span><span class="token function">getData</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>data<span class="token operator">==</span><span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">RuntimeException</span><span class="token punctuation">(</span><span class="token string">"用户不存在"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrantedAuthority</span><span class="token punctuation">></span></span> grantedAuthorities  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//获取该用户所拥有的角色</span>        <span class="token class-name">ResponseData</span> roleData <span class="token operator">=</span> roleFeignClient<span class="token punctuation">.</span><span class="token function">getByUserId</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JSONObject</span> roleJson <span class="token operator">=</span><span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">)</span> <span class="token class-name">JSONObject</span><span class="token punctuation">.</span><span class="token function">toJSON</span><span class="token punctuation">(</span>roleData<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//角色和权限共用GrantedAuthority接口，唯一的不同角色就是多了个前缀"ROLE_"</span><span class="token comment">//        // 声明用户角色</span>        roleJson<span class="token punctuation">.</span><span class="token function">getJSONArray</span><span class="token punctuation">(</span><span class="token string">"data"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>role <span class="token operator">-></span><span class="token punctuation">&#123;</span>            <span class="token comment">//基于角色控制</span>            grantedAuthorities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleGrantedAuthority</span><span class="token punctuation">(</span><span class="token string">"ROLE_"</span><span class="token operator">+</span><span class="token punctuation">(</span><span class="token punctuation">(</span><span class="token class-name">JSONObject</span><span class="token punctuation">)</span>role<span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"roleCode"</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">User</span> user <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">User</span><span class="token punctuation">(</span>data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"account"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> data<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"password"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> <span class="token boolean">true</span><span class="token punctuation">,</span> grantedAuthorities<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> user<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="5-登录成功处理器"><a href="#5-登录成功处理器" class="headerlink" title="(5).登录成功处理器"></a>(5).登录成功处理器</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 登录成功处理器 * @author: ※狗尾巴草 * @date: 2020-11-13 14:19 **/</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomizeAuthenticationSuccessHandler</span> <span class="token keyword">implements</span> <span class="token class-name">AuthenticationSuccessHandler</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> adminFeignClient adminFeignClient<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAuthenticationSuccess</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> httpServletRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> httpServletResponse<span class="token punctuation">,</span> <span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//更新用户表上次登录时间、更新人、更新时间等字段</span>        <span class="token class-name">User</span> userDetails <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> <span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        adminFeignClient<span class="token punctuation">.</span><span class="token function">updateLoginTime</span><span class="token punctuation">(</span>userDetails<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//        SysUserEntity sysUser = sysUserService.selectByName(userDetails.getUsername());</span><span class="token comment">//        sysUser.setLast_login_time(new Date());</span><span class="token comment">//        sysUser.setUpdate_time(new Date());</span><span class="token comment">//        sysUser.setUpdate_user(sysUser.getId());</span><span class="token comment">//        sysUserService.updateById(sysUser);</span>        <span class="token comment">//此处还可以进行一些处理，比如登录成功之后可能需要返回给前台当前用户有哪些菜单权限，</span>        <span class="token comment">//进而前台动态的控制菜单的显示等，具体根据自己的业务需求进行扩展</span>        <span class="token comment">//  获取用户权限</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">></span></span> authorities <span class="token operator">=</span> userDetails<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">GrantedAuthority</span> authority <span class="token operator">:</span> authorities<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>authority<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//将权限放入token中</span>        <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span><span class="token function">createToken</span><span class="token punctuation">(</span>userDetails<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JSONObject</span> object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        object<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">,</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        object<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"account"</span><span class="token punctuation">,</span>userDetails<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//处理编码方式，防止中文乱码的情况</span>        httpServletResponse<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/json;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//塞到HttpServletResponse中返回给前台</span>        httpServletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>object<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="6-登录失败"><a href="#6-登录失败" class="headerlink" title="(6).登录失败"></a>(6).登录失败</h3><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 登录失败处理逻辑 * @author: ※狗尾巴草 * @date: 2020-11-13 14:22 **/</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomizeAuthenticationFailureHandler</span> <span class="token keyword">implements</span> <span class="token class-name">AuthenticationFailureHandler</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAuthenticationFailure</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> httpServletRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> httpServletResponse<span class="token punctuation">,</span> <span class="token class-name">AuthenticationException</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//返回json数据</span>        <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> data <span class="token operator">=</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">AccountExpiredException</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//账号过期</span>            data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_ACCOUNT_EXPIRED<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_ACCOUNT_EXPIRED<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">BadCredentialsException</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//密码错误</span>            data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_CREDENTIALS_ERROR<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_CREDENTIALS_ERROR<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">CredentialsExpiredException</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//密码过期</span>            data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_CREDENTIALS_EXPIRED<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_CREDENTIALS_EXPIRED<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">DisabledException</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//账号不可用</span>            data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_ACCOUNT_DISABLE<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_ACCOUNT_DISABLE<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">LockedException</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//账号锁定</span>            data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_ACCOUNT_LOCKED<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_ACCOUNT_LOCKED<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span> <span class="token keyword">else</span> <span class="token keyword">if</span> <span class="token punctuation">(</span>e <span class="token keyword">instanceof</span> <span class="token class-name">InternalAuthenticationServiceException</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token comment">//用户不存在</span>            data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_ACCOUNT_NOT_EXIST<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_ACCOUNT_NOT_EXIST<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token comment">//其他错误</span>            data <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ResponseData</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>COMMON_FAIL<span class="token punctuation">.</span><span class="token function">getCode</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>COMMON_FAIL<span class="token punctuation">.</span><span class="token function">getMessage</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token comment">//处理编码方式，防止中文乱码的情况</span>        httpServletResponse<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/json;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//塞到HttpServletResponse中返回给前台</span>        httpServletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>data<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h3 id="7-微服务调用"><a href="#7-微服务调用" class="headerlink" title="7.微服务调用"></a>7.微服务调用</h3><blockquote><p>这里使用<strong>Feign</strong>做服务调用,</p></blockquote><p>1.admin服务调用</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: admin服务调用 *  * 声明需要调用的微服务名称 *  *  @FeignClient *  *      * name : 服务提供者的名称 * @author: ※狗尾巴草 * @date: 2020-11-27 11:20 **/</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"taoyiquan-admin"</span><span class="token punctuation">,</span>contextId <span class="token operator">=</span> <span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> adminFeignClient <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/api-admin/v1/admin/entity/getByAccount"</span><span class="token punctuation">)</span>    <span class="token class-name">ResponseData</span> <span class="token function">getByAccount</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"account"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> account<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"/api-admin/v1/admin/entity/updateLoginTime"</span><span class="token punctuation">)</span>    <span class="token class-name">ResponseData</span> <span class="token function">updateLoginTime</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"account"</span><span class="token punctuation">)</span> <span class="token class-name">String</span> account<span class="token punctuation">,</span> <span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"loginTime"</span><span class="token punctuation">)</span> <span class="token class-name">Date</span> loginTime<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>2.其他服务调用参考源码,</p><h2 id="管理员服务"><a href="#管理员服务" class="headerlink" title="管理员服务"></a>管理员服务</h2><p><img src="https://img-blog.csdnimg.cn/2020112821290815.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="管理员"><br><strong>注:管理员服务,用户服务等无特殊逻辑实现,跟平常些项目一样增删改查操作</strong></p><p>(省略一堆废话……..)</p><h1 id="五-功能测试"><a href="#五-功能测试" class="headerlink" title="五.功能测试"></a>五.功能测试</h1><h2 id="1-普通用户登录"><a href="#1-普通用户登录" class="headerlink" title="1.普通用户登录"></a>1.普通用户登录</h2><blockquote><p>接口; <a href="http://localhost:8849/auth/api-auth/v1/login">http://localhost:8849/auth/api-auth/v1/login</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201128214328810.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="普通用户登录"></p><h3 id="1-访问接口"><a href="#1-访问接口" class="headerlink" title="(1).访问接口"></a>(1).访问接口</h3><h4 id="a-用户资源接口-app接口"><a href="#a-用户资源接口-app接口" class="headerlink" title="(a).用户资源接口-app接口"></a>(a).用户资源接口-app接口</h4><blockquote><p><a href="http://localhost:8849/user/api-user/v1/api/entity">http://localhost:8849/user/api-user/v1/api/entity</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201128214558150.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="用户资源接口-api接口"></p><h4 id="b-用户资源接口-admin接口"><a href="#b-用户资源接口-admin接口" class="headerlink" title="(b).用户资源接口-admin接口"></a>(b).用户资源接口-admin接口</h4><blockquote><p><a href="http://localhost:8849/user/api-user/v1/admin/entity">http://localhost:8849/user/api-user/v1/admin/entity</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201128214724518.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="用户资源接口-admin接口"></p><h4 id="c-管理员接口"><a href="#c-管理员接口" class="headerlink" title="( c) .管理员接口"></a>( c) .管理员接口</h4><blockquote><p><a href="http://localhost:8849/admin/api-admin/v1/admin/entity">http://localhost:8849/admin/api-admin/v1/admin/entity</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201128215004801.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="管理员接口"></p><h4 id="d-公共资源接口"><a href="#d-公共资源接口" class="headerlink" title="(d).公共资源接口"></a>(d).公共资源接口</h4><blockquote><p><a href="http://localhost:8849/taobao/api-taobao/v1/info">http://localhost:8849/taobao/api-taobao/v1/info</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/2020112821510667.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="公共资源接口"></p><h2 id="2-管理员登录"><a href="#2-管理员登录" class="headerlink" title="2.管理员登录"></a>2.管理员登录</h2><blockquote><p><a href="http://localhost:8849/auth/api-auth/v1/login?username=admin_111&amp;password=111">http://localhost:8849/auth/api-auth/v1/login?username=admin_111&amp;password=111</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201128215247291.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="管理员登录"></p><h3 id="1-访问接口-1"><a href="#1-访问接口-1" class="headerlink" title="1.访问接口"></a>1.访问接口</h3><h4 id="a-用户资源接口-app接口-1"><a href="#a-用户资源接口-app接口-1" class="headerlink" title="(a).用户资源接口-app接口"></a>(a).用户资源接口-app接口</h4><blockquote><p><a href="http://localhost:8849/user/api-user/v1/api/entity">http://localhost:8849/user/api-user/v1/api/entity</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/2020112821563873.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="用户资源接口-app接口"></p><h4 id="b-用户资源接口-admin接口-1"><a href="#b-用户资源接口-admin接口-1" class="headerlink" title="(b).用户资源接口-admin接口"></a>(b).用户资源接口-admin接口</h4><blockquote><p><a href="http://localhost:8849/user/api-user/v1/admin/entity">http://localhost:8849/user/api-user/v1/admin/entity</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201128215819641.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="用户资源接口-admin接口"></p><h4 id="a-访问管理员接口"><a href="#a-访问管理员接口" class="headerlink" title="(a).访问管理员接口"></a>(a).访问管理员接口</h4><blockquote><p><a href="http://localhost:8849/admin/api-admin/v1/admin/entity">http://localhost:8849/admin/api-admin/v1/admin/entity</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/2020112821541996.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="访问管理员接口"></p><h1 id="六-最后"><a href="#六-最后" class="headerlink" title="六:最后:"></a>六:最后:</h1><h2 id="想象中的功能设计"><a href="#想象中的功能设计" class="headerlink" title="想象中的功能设计:"></a>想象中的功能设计:</h2><p>本来想在gateway的全局过滤器中拦截指定接口,再其判断token的有效性,有效即可通过,去鉴权,无效就拦截</p><h2 id="现实中的功能实现-我所能实现的"><a href="#现实中的功能实现-我所能实现的" class="headerlink" title="现实中的功能实现(我所能实现的):"></a>现实中的功能实现(我所能实现的):</h2><p>添加完成security和全局过滤器后,发现奇怪的事情,就是security执行在先,过滤器执行再后,无论过滤器的Order设置多小(记得是Order越小,优先级越高,先执行),都是过滤器执行再后,无奈就将过滤器注释掉,</p><h1 id="七-项目地址"><a href="#七-项目地址" class="headerlink" title="七.项目地址"></a>七.项目地址</h1><p><a href="https://github.com/xt962464/taoyiquan-Server">传送门</a></p><p>大体功能写到这,细节未完善</p><p><strong>有哪位路过的大佬,还望不吝赐教</strong></p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
          <category> java </category>
          
          <category> springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> JWT </tag>
            
            <tag> spring gateway </tag>
            
            <tag> nacos </tag>
            
            <tag> security </tag>
            
            <tag> Spring Cloud Hoxton </tag>
            
            <tag> Spring Cloud Alibaba </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Springboot + Spring Security +JWT + mybatis plus 实现前后端分离登录认证及权限控制</title>
      <link href="xt/2fd0.html"/>
      <url>xt/2fd0.html</url>
      
        <content type="html"><![CDATA[<p><strong>前言:</strong><br>参考文章:</p><ol><li><a href="https://blog.csdn.net/I_am_Hutengfei/article/details/100561564">Springboot + Spring Security 实现前后端分离登录认证及权限控制</a></li><li><a href="https://blog.csdn.net/zhangcongyi420/article/details/91348402">springboot+Spring-Security+JWT 实现用户登录和权限认证</a></li></ol><p>项目主要代码来源于参考的第一篇文章,jwt来源于第二篇<br><strong>改变:</strong></p><ol><li>将第一篇文章的项目改成我熟悉的无xml文件模式</li><li>将第二篇文章的jwt加入第一篇文章代码</li><li>代码部分修改…..</li></ol><p><strong>项目结构</strong><br><img src="https://img-blog.csdnimg.cn/2020112216221055.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="项目结构"></p><p><strong>一.基于权限控制</strong></p><ol><li>编写controller接口<br>a.管理员资源接口,需要有管理员相关权限或角色才可以访问<pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 管理员资源接口,需要有管理员相关权限或角色才可以访问 * @author: ※狗尾巴草 * @date: 2020-11-14 18:09 **/</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> adminController <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"info"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCommon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"admin资源"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre>b.普通用户资源接口,需要有普通相关权限或角色才可以访问</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 普通用户资源接口,需要有普通相关权限或角色才可以访问 * @author: ※狗尾巴草 * @date: 2020-11-13 12:43 **/</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> userController <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"getUser"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getUser</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"getUser"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>c.公共资源接口,无需权限或绝便可访问</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 公共资源接口,无需权限或绝便可访问 * @author: ※狗尾巴草 * @date: 2020-11-13 14:29 **/</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"common"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> commonCOntroller <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@GetMapping</span><span class="token punctuation">(</span><span class="token string">"info"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">getCommon</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token string">"公共资源"</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="2"><li><p>在数据库添加接口以及权限相关数据<br>a.接口,sys_request_path表<br><img src="https://img-blog.csdnimg.cn/20201122164301229.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="接口数据"><br>b.角色,sys_role表<br><img src="https://img-blog.csdnimg.cn/20201122164409545.png#pic_center" alt="角色数据"><br>c.权限<br><img src="https://img-blog.csdnimg.cn/20201122164451816.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="权限信息"></p></li><li><p>登录成功处理器,CustomizeAuthenticationSuccessHandler</p></li></ol><blockquote><p>添加JWT,将t权限信息保存到oken中,待会验证时再取出权限进行鉴权</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 登录成功处理器 * @author: ※狗尾巴草 * @date: 2020-11-13 14:19 **/</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomizeAuthenticationSuccessHandler</span> <span class="token keyword">implements</span> <span class="token class-name">AuthenticationSuccessHandler</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">SysUserService</span> sysUserService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">onAuthenticationSuccess</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> httpServletRequest<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> httpServletResponse<span class="token punctuation">,</span> <span class="token class-name">Authentication</span> authentication<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//更新用户表上次登录时间、更新人、更新时间等字段</span>        <span class="token class-name">User</span> userDetails <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token class-name">User</span><span class="token punctuation">)</span> <span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getPrincipal</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SysUserEntity</span> sysUser <span class="token operator">=</span> sysUserService<span class="token punctuation">.</span><span class="token function">selectByName</span><span class="token punctuation">(</span>userDetails<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sysUser<span class="token punctuation">.</span><span class="token function">setLast_login_time</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sysUser<span class="token punctuation">.</span><span class="token function">setUpdate_time</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sysUser<span class="token punctuation">.</span><span class="token function">setUpdate_user</span><span class="token punctuation">(</span>sysUser<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        sysUserService<span class="token punctuation">.</span><span class="token function">updateById</span><span class="token punctuation">(</span>sysUser<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//此处还可以进行一些处理，比如登录成功之后可能需要返回给前台当前用户有哪些菜单权限，</span>        <span class="token comment">//进而前台动态的控制菜单的显示等，具体根据自己的业务需求进行扩展</span>        <span class="token comment">//  获取用户权限</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">></span></span> authorities <span class="token operator">=</span> userDetails<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">></span></span> list <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> role <span class="token operator">=</span> <span class="token string">""</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">GrantedAuthority</span> authority <span class="token operator">:</span> authorities<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            role <span class="token operator">+=</span> authority<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">","</span><span class="token punctuation">;</span>            list<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span>authority<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        role<span class="token operator">=</span>role<span class="token punctuation">.</span><span class="token function">substring</span><span class="token punctuation">(</span><span class="token number">0</span><span class="token punctuation">,</span>role<span class="token punctuation">.</span><span class="token function">length</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//将权限放入token中</span>        <span class="token class-name">String</span> token <span class="token operator">=</span> <span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span><span class="token function">createToken</span><span class="token punctuation">(</span>userDetails<span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span> role<span class="token punctuation">)</span><span class="token punctuation">;</span>        sysUser<span class="token punctuation">.</span><span class="token function">setToken</span><span class="token punctuation">(</span><span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span>TOKEN_PREFIX<span class="token operator">+</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>        sysUser<span class="token punctuation">.</span><span class="token function">setAuthorities</span><span class="token punctuation">(</span>list<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">SysUserVO</span> userVO <span class="token operator">=</span> <span class="token class-name">ConvertUtils</span><span class="token punctuation">.</span><span class="token function">sourceToTarget</span><span class="token punctuation">(</span>sysUser<span class="token punctuation">,</span> <span class="token class-name">SysUserVO</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//返回json数据</span>        <span class="token class-name">JsonResult</span> result <span class="token operator">=</span> <span class="token class-name">ResultTool</span><span class="token punctuation">.</span><span class="token function">success</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        result<span class="token punctuation">.</span><span class="token function">setData</span><span class="token punctuation">(</span>userVO<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//处理编码方式，防止中文乱码的情况</span>        httpServletResponse<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"text/json;charset=utf-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//塞到HttpServletResponse中返回给前台</span>        httpServletResponse<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>result<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="4"><li>访问决策管理器,CustomizeAccessDecisionManager</li></ol><blockquote><p>原来的代码暂无改变</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">decide</span><span class="token punctuation">(</span><span class="token class-name">Authentication</span> authentication<span class="token punctuation">,</span> <span class="token class-name">Object</span> o<span class="token punctuation">,</span> <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigAttribute</span><span class="token punctuation">></span></span> collection<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">AccessDeniedException</span><span class="token punctuation">,</span> <span class="token class-name">InsufficientAuthenticationException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">Iterator</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">ConfigAttribute</span><span class="token punctuation">></span></span> iterator <span class="token operator">=</span> collection<span class="token punctuation">.</span><span class="token function">iterator</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//当前用户所具有的权限</span>    <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token operator">?</span> <span class="token keyword">extends</span> <span class="token class-name">GrantedAuthority</span><span class="token punctuation">></span></span> authorities <span class="token operator">=</span> authentication<span class="token punctuation">.</span><span class="token function">getAuthorities</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//当前请求需要的权限</span>    <span class="token keyword">while</span> <span class="token punctuation">(</span>iterator<span class="token punctuation">.</span><span class="token function">hasNext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">ConfigAttribute</span> ca <span class="token operator">=</span> iterator<span class="token punctuation">.</span><span class="token function">next</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">//当前请求需要的权限</span>        <span class="token class-name">String</span> needRole <span class="token operator">=</span> ca<span class="token punctuation">.</span><span class="token function">getAttribute</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">for</span> <span class="token punctuation">(</span><span class="token class-name">GrantedAuthority</span> authority <span class="token operator">:</span> authorities<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>authority<span class="token punctuation">.</span><span class="token function">getAuthority</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">equals</span><span class="token punctuation">(</span>needRole<span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                <span class="token keyword">return</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">//抛出AccessDeniedException异常,下面会新建个方法去捕获异常</span>    <span class="token keyword">throw</span> <span class="token keyword">new</span> <span class="token class-name">AccessDeniedException</span><span class="token punctuation">(</span><span class="token string">"权限不足!"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="5"><li>新添加AccessDeniedException权限异常捕获,CustomAccessDeniedHandler</li></ol><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 捕获 AccessDeniedException异常 * @author: ※狗尾巴草 * @date: 2020-11-22 0:15 **/</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">CustomAccessDeniedHandler</span> <span class="token keyword">implements</span> <span class="token class-name">AccessDeniedHandler</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">void</span> <span class="token function">handle</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span> <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span> <span class="token class-name">AccessDeniedException</span> e<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json;charset=UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">JsonResult</span> fail <span class="token operator">=</span> <span class="token class-name">ResultTool</span><span class="token punctuation">.</span><span class="token function">fail</span><span class="token punctuation">(</span><span class="token class-name">ResultCode</span><span class="token punctuation">.</span>USER_NOT_LOGIN<span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token string">"application/json"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">setStatus</span><span class="token punctuation">(</span><span class="token class-name">HttpServletResponse</span><span class="token punctuation">.</span>SC_OK<span class="token punctuation">)</span><span class="token punctuation">;</span>        response<span class="token punctuation">.</span><span class="token function">getWriter</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">write</span><span class="token punctuation">(</span>JSON<span class="token punctuation">.</span><span class="token function">toJSONString</span><span class="token punctuation">(</span>fail<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="6"><li>关于JWT</li></ol><blockquote><p><strong>改变</strong><br>删除原有的<br><code>        // 如果请求头中没有Authorization信息则直接放行了         if (tokenHeader == null || !tokenHeader.startsWith(TestJwtUtils.TOKEN_PREFIX)) &#123;             chain.doFilter(request, response);             return;         &#125;</code><br>        这样就可以每个接口都取读取token,<br>        修改getAuthentication方法,在getAuthentication方法解析token,取出权限或角色等信息</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 鉴权操作 * @author: ※狗尾巴草 * @date: 2020-11-14 0:20 **/</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">JWTAuthorizationFilter</span> <span class="token keyword">extends</span> <span class="token class-name">BasicAuthenticationFilter</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token class-name">JWTAuthorizationFilter</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManager</span> authenticationManager<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">super</span><span class="token punctuation">(</span>authenticationManager<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">doFilterInternal</span><span class="token punctuation">(</span><span class="token class-name">HttpServletRequest</span> request<span class="token punctuation">,</span>                                    <span class="token class-name">HttpServletResponse</span> response<span class="token punctuation">,</span>                                    <span class="token class-name">FilterChain</span> chain<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">IOException</span><span class="token punctuation">,</span> <span class="token class-name">ServletException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">String</span> tokenHeader <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span>TOKEN_HEADER<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token comment">// 对请求头d的token，进行解析,获取用户权限</span>        <span class="token class-name">SecurityContextHolder</span><span class="token punctuation">.</span><span class="token function">getContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setAuthentication</span><span class="token punctuation">(</span><span class="token function">getAuthentication</span><span class="token punctuation">(</span>tokenHeader<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">super</span><span class="token punctuation">.</span><span class="token function">doFilterInternal</span><span class="token punctuation">(</span>request<span class="token punctuation">,</span> response<span class="token punctuation">,</span> chain<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">// 从token中获取用户权限</span>    <span class="token keyword">private</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span> <span class="token function">getAuthentication</span><span class="token punctuation">(</span><span class="token class-name">String</span> tokenHeader<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// token为空或不正确,解析异常</span>        <span class="token keyword">try</span> <span class="token punctuation">&#123;</span>            <span class="token class-name">String</span> token <span class="token operator">=</span> tokenHeader<span class="token punctuation">.</span><span class="token function">replace</span><span class="token punctuation">(</span><span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span>TOKEN_PREFIX<span class="token punctuation">,</span> <span class="token string">""</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> username <span class="token operator">=</span> <span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span><span class="token function">getUsername</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">String</span> roles <span class="token operator">=</span> <span class="token class-name">JwtTokenUtils</span><span class="token punctuation">.</span><span class="token function">getUserRole</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">GrantedAuthority</span><span class="token punctuation">></span></span> grantedAuthorities  <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">for</span><span class="token punctuation">(</span><span class="token class-name">String</span> role<span class="token operator">:</span> roles<span class="token punctuation">.</span><span class="token function">split</span><span class="token punctuation">(</span><span class="token string">","</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isNotBlank</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                    grantedAuthorities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleGrantedAuthority</span><span class="token punctuation">(</span>role<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>                <span class="token punctuation">&#125;</span>            <span class="token punctuation">&#125;</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span>username <span class="token operator">!=</span> <span class="token keyword">null</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UsernamePasswordAuthenticationToken</span><span class="token punctuation">(</span>username<span class="token punctuation">,</span> <span class="token keyword">null</span><span class="token punctuation">,</span>grantedAuthorities<span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">catch</span> <span class="token punctuation">(</span><span class="token class-name">Exception</span> e<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="7"><li>关于配置</li></ol><blockquote><p><strong>改变:</strong><br>注释sesison</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"> <span class="token comment">//.maximumSessions(1)//同一账号同时登录最大用户数</span><span class="token comment">//.expiredSessionStrategy(sessionInformationExpiredStrategy)//会话信息过期策略会话信息过期策略(账号被挤下线)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><blockquote><p>添加禁用session代码</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">// 不需要session</span><span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span><span class="token class-name">SessionCreationPolicy</span><span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>        <span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>添加拦截器</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JWTAuthorizationFilter</span><span class="token punctuation">(</span><span class="token function">authenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><blockquote><p>注释掉会话信息过期策略CustomizeSessionInformationExpiredStrategy这个类<br>完整配置代码</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: Security配置 * @author: ※狗尾巴草 * @date: 2020-11-12 12:25 **/</span><span class="token annotation punctuation">@Configuration</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">SecurityConfig</span> <span class="token keyword">extends</span> <span class="token class-name">WebSecurityConfigurerAdapter</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeAuthenticationEntryPoint</span> authenticationEntryPoint<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeAuthenticationSuccessHandler</span> successHandler<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeAuthenticationFailureHandler</span> failureHandler<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeLogoutSuccessHandler</span> logoutSuccessHandler<span class="token punctuation">;</span><span class="token comment">//    @Autowired</span><span class="token comment">//    private CustomizeSessionInformationExpiredStrategy sessionInformationExpiredStrategy;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeAccessDecisionManager</span> accessDecisionManager<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">CustomizeFilterInvocationSecurityMetadataSource</span> securityMetadataSource<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token class-name">CustomAccessDeniedHandler</span> accessDeniedHandler<span class="token punctuation">;</span><span class="token comment">//    @Autowired</span><span class="token comment">//    private CustomizeAbstractSecurityInterceptor securityInterceptor;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">BCryptPasswordEncoder</span> <span class="token function">passwordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">// 设置默认的加密方式（强hash方式加密）</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">BCryptPasswordEncoder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token keyword">public</span> <span class="token class-name">UserDetailsService</span> <span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//获取用户账号密码及权限信息</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">UserDetailsServiceImpl</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">AuthenticationManagerBuilder</span> auth<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//配置认证方式</span>        auth<span class="token punctuation">.</span><span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token function">userDetailsService</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//    @Override</span><span class="token comment">//    public void configure(WebSecurity web) &#123;</span><span class="token comment">//        //对于在header里面增加token等类似情况，放行所有OPTIONS请求。</span><span class="token comment">//        web.ignoring().antMatchers(HttpMethod.OPTIONS, "/**");</span><span class="token comment">//    &#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">protected</span> <span class="token keyword">void</span> <span class="token function">configure</span><span class="token punctuation">(</span><span class="token class-name">HttpSecurity</span> http<span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">Exception</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//http相关的配置，包括登入登出、异常处理、会话管理等</span>        http        <span class="token punctuation">.</span><span class="token function">authorizeRequests</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">withObjectPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObjectPostProcessor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FilterSecurityInterceptor</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                    <span class="token annotation punctuation">@Override</span>                    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">O</span> <span class="token keyword">extends</span> <span class="token class-name">FilterSecurityInterceptor</span><span class="token punctuation">></span></span> <span class="token class-name">O</span> <span class="token function">postProcess</span><span class="token punctuation">(</span><span class="token class-name">O</span> o<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>                        o<span class="token punctuation">.</span><span class="token function">setAccessDecisionManager</span><span class="token punctuation">(</span>accessDecisionManager<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//访问决策管理器</span>                        o<span class="token punctuation">.</span><span class="token function">setSecurityMetadataSource</span><span class="token punctuation">(</span>securityMetadataSource<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//安全元数据源</span>                        <span class="token keyword">return</span> o<span class="token punctuation">;</span>                    <span class="token punctuation">&#125;</span>                <span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token comment">//                .antMatchers("/user/**").hasAuthority("query_user")</span>                <span class="token comment">//基于角色控制</span><span class="token comment">//                .antMatchers("/admin/**").hasAnyRole("admin")</span><span class="token comment">//                .antMatchers("/user/**").hasAnyRole("user")</span>        <span class="token comment">//登入</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">formLogin</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">loginPage</span><span class="token punctuation">(</span><span class="token string">"/auth/login"</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//允许所有用户</span>                <span class="token punctuation">.</span><span class="token function">successHandler</span><span class="token punctuation">(</span>successHandler<span class="token punctuation">)</span><span class="token comment">//登录成功处理逻辑</span>                <span class="token punctuation">.</span><span class="token function">failureHandler</span><span class="token punctuation">(</span>failureHandler<span class="token punctuation">)</span><span class="token comment">//登录失败处理逻辑</span><span class="token comment">//        //登出</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">logout</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">permitAll</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//允许所有用户</span>                <span class="token punctuation">.</span><span class="token function">logoutSuccessHandler</span><span class="token punctuation">(</span>logoutSuccessHandler<span class="token punctuation">)</span><span class="token comment">//登出成功处理逻辑</span>                <span class="token punctuation">.</span><span class="token function">deleteCookies</span><span class="token punctuation">(</span><span class="token string">"JSESSIONID"</span><span class="token punctuation">)</span><span class="token comment">//登出之后删除cookie</span>                <span class="token comment">//异常处理(权限拒绝、登录失效等)</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">exceptionHandling</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span>                <span class="token function">authenticationEntryPoint</span><span class="token punctuation">(</span>authenticationEntryPoint<span class="token punctuation">)</span><span class="token comment">//匿名用户访问无权限资源时的异常处理</span>                <span class="token punctuation">.</span><span class="token function">accessDeniedHandler</span><span class="token punctuation">(</span>accessDeniedHandler<span class="token punctuation">)</span><span class="token comment">//异常捕获</span><span class="token comment">//                .authenticationEntryPoint(new JWTAuthenticationEntryPoint())</span><span class="token comment">//        限制同一账号只能一个用户使用  会话管理</span>        <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//                .maximumSessions(1)//同一账号同时登录最大用户数</span><span class="token comment">//                .expiredSessionStrategy(sessionInformationExpiredStrategy)//会话信息过期策略会话信息过期策略(账号被挤下线)</span>        <span class="token punctuation">;</span>        http<span class="token punctuation">.</span><span class="token function">csrf</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">disable</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">cors</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">and</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token comment">//                .addFilter(new JWTAuthenticationFilter(authenticationManager()))</span>                <span class="token punctuation">.</span><span class="token function">addFilter</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">JWTAuthorizationFilter</span><span class="token punctuation">(</span><span class="token function">authenticationManager</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span>                <span class="token comment">// 不需要session</span>                <span class="token punctuation">.</span><span class="token function">sessionManagement</span><span class="token punctuation">(</span><span class="token punctuation">)</span>                <span class="token punctuation">.</span><span class="token function">sessionCreationPolicy</span><span class="token punctuation">(</span><span class="token class-name">SessionCreationPolicy</span><span class="token punctuation">.</span>STATELESS<span class="token punctuation">)</span>        <span class="token punctuation">;</span><span class="token comment">//        http.addFilterBefore(securityInterceptor, FilterSecurityInterceptor.class);//增加到默认拦截链中</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><ol start="8"><li><p>添加两个用户<br><img src="https://img-blog.csdnimg.cn/20201122170644621.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="user"></p></li><li><p>测试<br><strong>一:未登录状态</strong></p><blockquote><p>a.管理员资源接口:<a href="http://localhost:8666/admin/info">http://localhost:8666/admin/info</a><br><img src="https://img-blog.csdnimg.cn/20201122170843353.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="admin接口"><br>其他接口一样……</p></blockquote><p><strong>二:登录获取token</strong></p><blockquote><p>a.登录 localhost:8666/auth/login?username=user&amp;password=123456</p></blockquote></li></ol><p><img src="https://img-blog.csdnimg.cn/20201122171137935.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="登录"></p><blockquote><p>b 已经点击过登录,但不携带token进行访问,被拦截</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201122175330378.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="已经点击过登录,但不携带token进行访问"></p><p><strong>以下携带token进行访问</strong></p><blockquote><p>c.访问user接口,<a href="http://localhost:8666/user/getUser,%E5%B9%B6%E6%88%90%E5%8A%9F%E8%BF%94%E5%9B%9E%E6%95%B0%E6%8D%AE">http://localhost:8666/user/getUser,并成功返回数据</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201122171312274.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="user接口"></p><blockquote><p>d.用普通用户的token访问管理员接口,<a href="http://localhost:8666/admin/info,%E5%B9%B6%E6%88%90%E5%8A%9F%E8%BF%9B%E8%A1%8C%E6%8B%A6%E6%88%AA">http://localhost:8666/admin/info,并成功进行拦截</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201122171502603.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="admin接口"><br><strong>三:公共接口以及管理员接口同理,不做操作了</strong><br><strong>四:流程分析</strong><br>1.携带token访问,<strong>就本项目而言,所写配置中</strong>,先被<strong>JWTAuthorizationFilter</strong>拦截器进行拦截,取出token中的权限信息,并返回<strong>UsernamePasswordAuthenticationToken</strong>对象,执行<strong>super.doFilterInternal(request, response, chain);</strong><br><img src="https://img-blog.csdnimg.cn/20201122172434709.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="token拦截"><br>2 <strong>.查询接口所配置的权限,CustomizeFilterInvocationSecurityMetadataSource</strong> </p><p><img src="https://img-blog.csdnimg.cn/20201122172548388.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="查询接口所配置的权限"></p><p>3.然后到<strong>访问决策管理器CustomizeAccessDecisionManager</strong> ,对url所需要的权限和用户所具有的权限进行决策.具有权限就通过,权限不足便抛出异常<img src="https://img-blog.csdnimg.cn/20201122172304899.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="权限决策"><br>4.然后回到<strong>JWTAuthorizationFilter</strong>拦截器<img src="https://img-blog.csdnimg.cn/20201122172947857.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="JWTAuthorizationFilter"><br>省略一堆源码…..最后访问到所需资源<img src="https://img-blog.csdnimg.cn/20201122173307675.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="user资源"><br><strong>二:基于角色控制</strong><br><strong>注:角色和权限共用GrantedAuthority接口，不同的是角色多了个前缀”ROLE_”</strong></p><blockquote><p>1.修改UserDetailsServiceImpl,登陆成功后,取出该用户所有的角色,并注释权限的相关代码</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//获取用户所有角色</span><span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">SysRoleEntity</span><span class="token punctuation">></span></span> roleList <span class="token operator">=</span> sysRoleService<span class="token punctuation">.</span><span class="token function">selectByUser</span><span class="token punctuation">(</span>userEntity<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 声明用户角色</span>roleList<span class="token punctuation">.</span><span class="token function">forEach</span><span class="token punctuation">(</span>role <span class="token operator">-></span><span class="token punctuation">&#123;</span>    <span class="token comment">//基于角色控制</span>    grantedAuthorities<span class="token punctuation">.</span><span class="token function">add</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">SimpleGrantedAuthority</span><span class="token punctuation">(</span><span class="token string">"ROLE_"</span><span class="token operator">+</span>role<span class="token punctuation">.</span><span class="token function">getRole_code</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>2.SecurityConfig配置路由</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//基于角色控制,这里的角色名不需要加前缀,因为在hasAnyRole方法的源码里面已经写好拼接了</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/admin/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasAnyRole</span><span class="token punctuation">(</span><span class="token string">"admin"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">antMatchers</span><span class="token punctuation">(</span><span class="token string">"/user/**"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">hasAnyRole</span><span class="token punctuation">(</span><span class="token string">"user"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><blockquote><p>3.注释权限配置代码,否则还是会以权限控制方式进行鉴权</p></blockquote><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token punctuation">.</span><span class="token function">withObjectPostProcessor</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">ObjectPostProcessor</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">FilterSecurityInterceptor</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">O</span> <span class="token keyword">extends</span> <span class="token class-name">FilterSecurityInterceptor</span><span class="token punctuation">></span></span> <span class="token class-name">O</span> <span class="token function">postProcess</span><span class="token punctuation">(</span><span class="token class-name">O</span> o<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        o<span class="token punctuation">.</span><span class="token function">setAccessDecisionManager</span><span class="token punctuation">(</span>accessDecisionManager<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//访问决策管理器</span>        o<span class="token punctuation">.</span><span class="token function">setSecurityMetadataSource</span><span class="token punctuation">(</span>securityMetadataSource<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">//安全元数据源</span>        <span class="token keyword">return</span> o<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><blockquote><p>a.进行登录,localhost:8666/auth/login?username=user&amp;password=123456,获取token</p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201122174355681.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="登录"></p><blockquote><p>携带token进行访问user接口,<a href="http://localhost:8666/user/getUser">http://localhost:8666/user/getUser</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/2020112217484848.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="user"></p><blockquote><p>携带token进行访问admin接口,<a href="http://localhost:8666/admin/info,%E5%B9%B6%E6%88%90%E5%8A%9F%E8%A2%AB%E6%8B%A6%E6%88%AA">http://localhost:8666/admin/info,并成功被拦截</a></p></blockquote><p><img src="https://img-blog.csdnimg.cn/20201122174941604.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="admin接口"><br><strong>注:</strong> 在参考的第一篇文章中,那个<strong>权限拦截器</strong>已经被我注销掉了,经过几次断点调试发现,他会在<strong>权限拦截器</strong> 和 <strong>访问决策管理器</strong> 循环三次,重复读取数据库数据,三次过后就正常访问资源,思来想去也想不明白,于是就被我删除了</p><p>最后,<br><a href="https://github.com/xt962464/spring_security">项目地址</a></p>]]></content>
      
      
      <categories>
          
          <category> Springboot </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Springboot </tag>
            
            <tag> Spring Security </tag>
            
            <tag> JWT </tag>
            
            <tag> mybatis plus </tag>
            
            <tag> 前后端分离 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务学习之路--SpringCloud之zuul网关</title>
      <link href="xt/812b.html"/>
      <url>xt/812b.html</url>
      
        <content type="html"><![CDATA[<h2 id="一-什么是zuul网关"><a href="#一-什么是zuul网关" class="headerlink" title="一.什么是zuul网关"></a>一.什么是zuul网关</h2><p><a href="https://www.oschina.net/p/zuul?hmsr=aladdin1e1">zuul 是netflix开源的一个API Gateway 服务器,Zuul 相当于是设备和 Netflix 流应用的 Web 网站后端所有请求的前门。Zuul 可以适当的对多个 Amazon Auto Scaling Groups 进行路由请求。</a><br>按我的理解,他就是一系列的filters,web应用</p><h2 id="zuul网关的作用"><a href="#zuul网关的作用" class="headerlink" title="zuul网关的作用"></a>zuul网关的作用</h2><p>Zuul 包含多个组件：</p><ul><li>zuul-core</li><li>zuul-simple-webapp</li><li>zuul-netflix </li><li>zuul-netflix-webapp</li></ul><p>Zuul提供了动态路由、弹性负载、监控和安全等功能,对接口请求进行鉴权、登录判断等操作.</p><h2 id="代码简单实现"><a href="#代码简单实现" class="headerlink" title="代码简单实现"></a>代码简单实现</h2><h2 id="1-创建项目"><a href="#1-创建项目" class="headerlink" title="1.创建项目"></a>1.创建项目</h2><p><img src="https://img-blog.csdnimg.cn/20201016235740283.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="网关"></p><h2 id="2-依赖包"><a href="#2-依赖包" class="headerlink" title="2.依赖包"></a>2.依赖包</h2><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-eureka-client<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span>    <span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-zuul<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="3-自定义路由规则"><a href="#3-自定义路由规则" class="headerlink" title="3.自定义路由规则"></a>3.自定义路由规则</h2><pre class="line-numbers language-yaml" data-language="yaml"><code class="language-yaml"><span class="token key atrule">zuul</span><span class="token punctuation">:</span><span class="token comment">#  自定义路由</span>  <span class="token key atrule">routes</span><span class="token punctuation">:</span>    <span class="token key atrule">order-service</span><span class="token punctuation">:</span> /gateway/order/<span class="token important">**</span>    <span class="token key atrule">product-service</span><span class="token punctuation">:</span> /gateway/product/<span class="token important">**</span><span class="token comment">#    过滤路由</span>  <span class="token key atrule">ignored-services</span><span class="token punctuation">:</span> /<span class="token important">*-service/**</span><span class="token comment"># 设置 Http请求头过滤 为空</span>  <span class="token key atrule">sensitive-headers</span><span class="token punctuation">:</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="4-访问接口"><a href="#4-访问接口" class="headerlink" title="4 .访问接口"></a>4 .访问接口</h2><p><a href="http://localhost:9000/gateway/order/api/v1/order/save?userId=123&amp;productId=1">http://localhost:9000/gateway/order/api/v1/order/save?userId=123&amp;productId=1</a></p><p><a href="http://localhost:**网关端口**/**网关配置的目标服务的路由**/">http://localhost:**网关端口**/**网关配置的目标服务的路由**/</a>**</p><p><img src="https://img-blog.csdnimg.cn/20201017000609639.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="请求接口"></p><h2 id="5-创建filter类-loginFilter"><a href="#5-创建filter类-loginFilter" class="headerlink" title="5.创建filter类-loginFilter"></a>5.创建filter类-loginFilter</h2><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * @description: 过滤器 * @author: ※狗尾巴草 * @date: 2020-10-16 21:54 **/</span><span class="token annotation punctuation">@Component</span><span class="token keyword">public</span> <span class="token keyword">class</span> loginFilter <span class="token keyword">extends</span> <span class="token class-name">ZuulFilter</span> <span class="token punctuation">&#123;</span>    <span class="token comment">/**    * @description: 过滤类型    * @params:    * @author: 狗尾巴草    * @time:    */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">String</span> <span class="token function">filterType</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> PRE_TYPE<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**    * @description: 过滤器的顺序,越小越先执行    * @params:    * @author: 狗尾巴草    * @time:    */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">int</span> <span class="token function">filterOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token number">4</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**    * @description: 拦截是否生效    * @params:    * @author: 狗尾巴草    * @time:    */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token keyword">boolean</span> <span class="token function">shouldFilter</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> <span class="token class-name">RequestContext</span><span class="token punctuation">.</span><span class="token function">getCurrentContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">String</span> regEx  <span class="token operator">=</span> <span class="token string">".*/gateway/order/.*"</span><span class="token punctuation">;</span>        <span class="token class-name">Pattern</span> pattern <span class="token operator">=</span> <span class="token class-name">Pattern</span><span class="token punctuation">.</span><span class="token function">compile</span><span class="token punctuation">(</span>regEx<span class="token punctuation">,</span><span class="token class-name">Pattern</span><span class="token punctuation">.</span>CASE_INSENSITIVE<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Matcher</span> matcher <span class="token operator">=</span> pattern<span class="token punctuation">.</span><span class="token function">matcher</span><span class="token punctuation">(</span>request<span class="token punctuation">.</span><span class="token function">getRequestURI</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">if</span><span class="token punctuation">(</span>matcher<span class="token punctuation">.</span><span class="token function">find</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//被拦截</span>            <span class="token keyword">return</span> <span class="token boolean">true</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token boolean">false</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token comment">/**    * @description: 业务逻辑    * @params:    * @author: 狗尾巴草    * @time:    */</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ZuulException</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"拦截了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><h2 id="6-访问接口"><a href="#6-访问接口" class="headerlink" title="6.访问接口"></a>6.访问接口</h2><p><a href="http://localhost:9000/gateway/order/api/v1/order/save?userId=123&amp;productId=1&amp;token=123">http://localhost:9000/gateway/order/api/v1/order/save?userId=123&amp;productId=1&amp;token=123</a><br><img src="https://img-blog.csdnimg.cn/20201017000703370.png#pic_center" alt="接口被拦截"></p><h2 id="7-添加返回JSON数据"><a href="#7-添加返回JSON数据" class="headerlink" title="7.添加返回JSON数据"></a>7.添加返回JSON数据</h2><p>修改拦截的业务逻辑方法</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/*** @description: 业务逻辑* @params:* @author: 狗尾巴草* @time:*/</span><span class="token annotation punctuation">@Override</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">run</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token keyword">throws</span> <span class="token class-name">ZuulException</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span><span class="token string">"拦截了"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">RequestContext</span> requestContext<span class="token operator">=</span> <span class="token class-name">RequestContext</span><span class="token punctuation">.</span><span class="token function">getCurrentContext</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">HttpServletRequest</span> request <span class="token operator">=</span> requestContext<span class="token punctuation">.</span><span class="token function">getRequest</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    requestContext<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setContentType</span><span class="token punctuation">(</span><span class="token class-name">MediaType</span><span class="token punctuation">.</span>APPLICATION_JSON_UTF8_VALUE<span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置编码</span>    requestContext<span class="token punctuation">.</span><span class="token function">getResponse</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">setCharacterEncoding</span><span class="token punctuation">(</span><span class="token string">"UTF-8"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">String</span> token <span class="token operator">=</span> request<span class="token punctuation">.</span><span class="token function">getHeader</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        token<span class="token operator">=</span>request<span class="token punctuation">.</span><span class="token function">getParameter</span><span class="token punctuation">(</span><span class="token string">"token"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token class-name">JSONObject</span> object <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">JSONObject</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token comment">//判断token有效性</span>    <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token class-name">StringUtils</span><span class="token punctuation">.</span><span class="token function">isBlank</span><span class="token punctuation">(</span>token<span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        object<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"status"</span><span class="token punctuation">,</span><span class="token string">"401"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        requestContext<span class="token punctuation">.</span><span class="token function">setSendZuulResponse</span><span class="token punctuation">(</span><span class="token boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">// 不再向下执行</span>        requestContext<span class="token punctuation">.</span><span class="token function">setResponseBody</span><span class="token punctuation">(</span>object<span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        requestContext<span class="token punctuation">.</span><span class="token function">setResponseStatusCode</span><span class="token punctuation">(</span><span class="token class-name">HttpStatus</span><span class="token punctuation">.</span>INTERNAL_SERVER_ERROR<span class="token punctuation">.</span><span class="token function">value</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//设置http状态码</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">return</span> <span class="token keyword">null</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>写的太随意,粗制烂叶的,有错误地地方还望路过的老铁指出,谢谢<br>最后附上项目地址:<a href="https://github.com/xt962464/Eureka_demo">https://github.com/xt962464/Eureka_demo</a></p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> zuul网关 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务学习之路--Springcloud之降级与熔断</title>
      <link href="xt/41c8.html"/>
      <url>xt/41c8.html</url>
      
        <content type="html"><![CDATA[<p>(好久没写东西了,之前学习的Springcolud因其他事情落下了,现去到了个新的学校,不能让让自己越来越懒,就又捡起来了,继续学习)</p><p><strong>一理论知识:</strong></p><ol><li><p>降级<br><strong>个人理解</strong>:就是对服务的”降级”,服务也有主次之分,将非核心任务按照一定策略地进行降级,以此缓解服务器地压力,释放资源来服务于核心任务,来保证核心服务的正常工作.比如常见双十一,618等等剁手节,流量激增,这时就会用到相关技术来解决服务器压力过大而导致宕机或服务挂掉……</p></li><li><p>熔断<br><strong>个人理解</strong>:好比如保险丝,电路过载会烧毁保险丝,以保证电路安全.程序中的熔断,一般当服务出现异常或错误等出现时,就会熔断服务,保证整个系统的安全,若不然可能会一整等待服务响应,直至500或其他.这时就起到了保护的作用.</p></li><li><p>熔断和降级互相交集</p><pre><code>1.相同点:    1）从可用性和可靠性来看，有效的防止系统崩溃,服务错误等    2）在用户体验上,相比于500页面或无响应,还是比较好的2.相同点:    1) 服务熔断一般是子服务,附属,下游服务等故障导致的，而服务降级一般是从整体系统负荷考虑，由调用方控制</code></pre><p>……</p></li><li><p>Hystrix</p></li></ol><p><strong>1.是什么</strong></p><blockquote><pre><code>文档地址：    https://github.com/Netflix/Hystrix    https://github.com/Netflix/Hystrix/wiki</code></pre></blockquote><p><a href="https://www.oschina.net/p/hystrix?hmsr=aladdin1e1">Netflix（一家在线影片租赁商）开源了其Hystrix库，这是一个针对分布式系统的<strong>延迟和容错库</strong>。<br>Hystrix 供分布式系统使用，提供<strong>延迟</strong>和<strong>容错</strong>功能，<strong>隔离</strong>远程系统、访问和第三方程序库的访问点，防止级联失败，保证复杂的分布系统在面临不可避免的失败时，仍能有其弹性。</a></p><p><strong>2.为什么要用</strong><br>通常在一个分布式系统里，一个服务会依赖多个服务，可能存在某个服务调用失败，<br>        比如超时、异常等，如何能够保证在一个依赖出问题的情况下，不会导致整体服务失败，<br>        这时我们可以通过Hystrix来解决</p><p><strong>二:代码编程</strong><br>    <strong>tips</strong>:编程实现目标:(项目依然是上次的项目)调用订单服务接口,模拟商品服务宕机或故障等,利用Hystrix熔断服务,返回错误信息</p><p>订单服务新增依赖:</p><pre class="line-numbers language-xml" data-language="xml"><code class="language-xml"><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>dependency</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>groupId</span><span class="token punctuation">></span></span>org.springframework.cloud<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>groupId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;</span>artifactId</span><span class="token punctuation">></span></span>spring-cloud-starter-netflix-hystrix<span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>artifactId</span><span class="token punctuation">></span></span><span class="token tag"><span class="token tag"><span class="token punctuation">&lt;/</span>dependency</span><span class="token punctuation">></span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>订单服务启动类新增注解:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@EnableCircuitBreaker</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>订单接口新增注解:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@HystrixCommand</span><span class="token punctuation">(</span>fallbackMethod <span class="token operator">=</span> <span class="token string">"ErrorFallback"</span><span class="token punctuation">)</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>ErrorFallback是一个方法名,用来处理熔断后的数据返回,保证用户体验,<br>新增方法:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">/** * 参数必须和API接口参数一致 */</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token class-name">ErrorFallback</span><span class="token punctuation">(</span><span class="token keyword">int</span> userId<span class="token punctuation">,</span> <span class="token keyword">int</span> product<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Object</span><span class="token punctuation">,</span> <span class="token class-name">Object</span><span class="token punctuation">></span></span> map <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"ststus"</span><span class="token punctuation">,</span> <span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    map<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span><span class="token string">"msg"</span><span class="token punctuation">,</span> <span class="token string">"发生异常"</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> map<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>启动注册中心:发现俩服务<br><img src="https://img-blog.csdnimg.cn/20201007001835617.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="注册中心"><br>测试订单接口,进行下单操作:</p><blockquote><p><a href="http://localhost:8781/api/v1/order/save?userId=123&amp;productId=1">http://localhost:8781/api/v1/order/save?userId=123&amp;productId=1</a></p></blockquote><p>数据响应:<br><img src="https://img-blog.csdnimg.cn/20201007002026923.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="订单接口数据响应"><br>现在我将商品服务关闭后访问订单接口进行下单:<br><img src="https://img-blog.csdnimg.cn/20201007002258542.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70#pic_center" alt="订单接口错误信息"><br>写的太随意,粗制烂叶的,有错误地地方还望路过的老铁指出,谢谢<br>最后附上项目地址:<a href="https://github.com/xt962464/Eureka_demo">https://github.com/xt962464/Eureka_demo</a></p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hystrix </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务SpringCloud入门实战(二)_ribbon、feign服务之间的调用</title>
      <link href="xt/3a98.html"/>
      <url>xt/3a98.html</url>
      
        <content type="html"><![CDATA[<h2 id="服务之间的调用"><a href="#服务之间的调用" class="headerlink" title="服务之间的调用"></a>服务之间的调用</h2><p>上一篇搭建了一个Product服务,今天记录一下学习过程: <strong>服务消费者ribbon和feign实战和注册中心高可用</strong><br>笔记如下:</p><ol><li><strong>常用的服务间调用方式</strong><ol><li>RPC:<pre><code> 1.1 远程过程调用，像调用本地服务(方法)一样调用服务器的服务 1.2 支持同步、异步调用 1.3 客户端和服务器之间建立TCP连接，可以一次建立一个，也可以多个调用复用一次链接 1.4 PRC数据包小     protobuf     thrift rpc：编解码，序列化，链接，丢包，协议</code></pre></li><li><strong>Rest(Http):</strong><pre><code> http请求，支持多种协议和功能 开发方便成本低 http数据包大 java开发：HttpClient，URLConnection</code></pre></li></ol></li></ol><p>项目搭建:<strong>微服务调用方式之ribbon实战 订单调用商品服务</strong><br>    简介：实战电商项目 订单服务 调用商品服务获取商品信息<br>        1、创建order_service项目<br>        2、开发伪下单接口<br>        3、使用ribbon. (类似httpClient,URLConnection)<br>            启动类增加注解</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Bean</span><span class="token annotation punctuation">@LoadBalanced</span><span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>     <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>4、根据名称进行调用商品，获取商品详情</p><p>一:order订单服务搭建:<br>    搭建一个springboot应用,与搭建Product服务一样,依赖选择如下<img src="https://img-blog.csdnimg.cn/20191208153935809.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>实体类:</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>io<span class="token punctuation">.</span></span><span class="token class-name">Serializable</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/7 0:08 */</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductOrder</span> <span class="token keyword">implements</span> <span class="token class-name">Serializable</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token comment">/**     * 商品名称     */</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> productName    <span class="token comment">/**     * 订单号     */</span>    <span class="token keyword">private</span>  <span class="token class-name">String</span> tradeNo<span class="token punctuation">;</span>    <span class="token comment">/**     * 价格,分     */</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> price<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">Date</span> createTime<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> userId<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> userName<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>Servic:</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">ProductOrder</span><span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/7 0:08 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> orderService <span class="token punctuation">&#123;</span>    <span class="token class-name">ProductOrder</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">int</span> userId<span class="token punctuation">,</span> <span class="token keyword">int</span> product<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>实现类:</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">ProductOrder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Date</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">Map</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span>UUID<span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/7 0:09 */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> orderServiceImpl <span class="token keyword">implements</span> orderService <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">RestTemplate</span> restTemplate<span class="token punctuation">;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">ProductOrder</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token keyword">int</span> userId<span class="token punctuation">,</span> <span class="token keyword">int</span> productId<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token comment">//获取商品详情  http://localhost:8771/api/v1/product/find?id=1</span>        <span class="token class-name">String</span> url<span class="token operator">=</span><span class="token string">"http://product-service/api/v1/product/find?id="</span><span class="token operator">+</span>productId<span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>url<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">String</span><span class="token punctuation">,</span><span class="token class-name">Object</span><span class="token punctuation">></span></span> productMap <span class="token operator">=</span> restTemplate<span class="token punctuation">.</span><span class="token function">getForObject</span><span class="token punctuation">(</span>url<span class="token punctuation">,</span> <span class="token class-name">Map</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">ProductOrder</span> productOrder <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ProductOrder</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        productOrder<span class="token punctuation">.</span><span class="token function">setCreateTime</span><span class="token punctuation">(</span><span class="token keyword">new</span> <span class="token class-name">Date</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        productOrder<span class="token punctuation">.</span><span class="token function">setUserId</span><span class="token punctuation">(</span>userId<span class="token punctuation">)</span><span class="token punctuation">;</span>        productOrder<span class="token punctuation">.</span><span class="token function">setTradeNo</span><span class="token punctuation">(</span>UUID<span class="token punctuation">.</span><span class="token function">randomUUID</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        productOrder<span class="token punctuation">.</span><span class="token function">setProductName</span><span class="token punctuation">(</span>productMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"name"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        productOrder<span class="token punctuation">.</span><span class="token function">setPrice</span><span class="token punctuation">(</span><span class="token class-name">Integer</span><span class="token punctuation">.</span><span class="token function">parseInt</span><span class="token punctuation">(</span>productMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token string">"price"</span><span class="token punctuation">)</span><span class="token punctuation">.</span><span class="token function">toString</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">System</span><span class="token punctuation">.</span>out<span class="token punctuation">.</span><span class="token function">println</span><span class="token punctuation">(</span>productOrder<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> productOrder<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>其中<strong>product-service</strong>代表着之前的Product服务<img src="https://img-blog.csdnimg.cn/2019120815440997.png" alt="在这里插入图片描述"></p><p><strong>controller:</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">ProductOrder</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>service<span class="token punctuation">.</span>orderService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/7 0:06 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/api/v1/order"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> orderController <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> orderService <span class="token class-name">OrderService</span><span class="token punctuation">;</span>    <span class="token comment">//模拟下单接口</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"save"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">save</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"userId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> userId<span class="token punctuation">,</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"productId"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> product<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name">OrderService</span><span class="token punctuation">.</span><span class="token function">save</span><span class="token punctuation">(</span>userId<span class="token punctuation">,</span>product<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>启动类:</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span></span><span class="token class-name">SpringApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>boot<span class="token punctuation">.</span>autoconfigure<span class="token punctuation">.</span></span><span class="token class-name">SpringBootApplication</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>client<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span></span><span class="token class-name">LoadBalanced</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>context<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Bean</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>client<span class="token punctuation">.</span></span><span class="token class-name">RestTemplate</span><span class="token punctuation">;</span><span class="token annotation punctuation">@SpringBootApplication</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">OrderServerApplication</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">static</span> <span class="token keyword">void</span> <span class="token function">main</span><span class="token punctuation">(</span><span class="token class-name">String</span><span class="token punctuation">[</span><span class="token punctuation">]</span> args<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">SpringApplication</span><span class="token punctuation">.</span><span class="token function">run</span><span class="token punctuation">(</span><span class="token class-name">OrderServerApplication</span><span class="token punctuation">.</span><span class="token keyword">class</span><span class="token punctuation">,</span> args<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token comment">//    可做负载均衡</span>    <span class="token annotation punctuation">@Bean</span>    <span class="token annotation punctuation">@LoadBalanced</span>    <span class="token keyword">public</span> <span class="token class-name">RestTemplate</span> <span class="token function">restTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token keyword">new</span> <span class="token class-name">RestTemplate</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>配置文件:</strong></p><pre class="line-numbers language-java" data-language="java"><code class="language-java">server<span class="token operator">:</span>  port<span class="token operator">:</span> <span class="token number">8781</span>#指定注册中心地址eureka<span class="token operator">:</span>  client<span class="token operator">:</span>    serviceUrl<span class="token operator">:</span>      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8761</span><span class="token operator">/</span>eureka<span class="token operator">/</span>#服务的名称spring<span class="token operator">:</span>  application<span class="token operator">:</span>    name<span class="token operator">:</span> order<span class="token operator">-</span>service<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后,为了分辨服务在哪个端口调用,修改一下product服务代码</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@Value</span><span class="token punctuation">(</span><span class="token string">"$&#123;server.port&#125;"</span><span class="token punctuation">)</span><span class="token keyword">private</span> <span class="token class-name">String</span> port<span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"find"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">product</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>    <span class="token class-name">Product</span> product <span class="token operator">=</span> productService<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    product<span class="token punctuation">.</span><span class="token function">setName</span><span class="token punctuation">(</span>product<span class="token punctuation">.</span><span class="token function">getName</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token string">"----"</span><span class="token operator">+</span>port<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">return</span> product<span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>启动服务:</strong><br>为了方便观察负载均衡现象,我这里创建了3个Product实例,当然也可以以其他方法运行多个实例来模拟集群</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token operator">-</span><span class="token class-name">Dserver</span><span class="token punctuation">.</span>port<span class="token operator">=</span><span class="token number">8773</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p><img src="https://img-blog.csdnimg.cn/20191208155211563.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>刷新注册中心:<br><img src="https://img-blog.csdnimg.cn/20191208155531485.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>到此:各个服务都已经注册到注册中心:<br>访问订单order服务接口:<br><a href="http://localhost:8781/api/v1/order/save?userId=123&amp;productId=1">http://localhost:8781/api/v1/order/save?userId=123&amp;productId=1</a><br><img src="https://img-blog.csdnimg.cn/20191208161242920.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>有数据返回,说明服务正常,并且调用端口是:<strong>8771</strong>,接下来不断刷新页面<img src="https://img-blog.csdnimg.cn/20191208160952149.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191208161032397.png" alt="在这里插入图片描述"><br>一直在8771-8773之间轮流调用,因为默认<strong>采用的是负载均衡策略中的轮询策略</strong><br><strong>ribbon服务间调用负载均衡源码分析</strong><br>        1、分析@LoadBalanced<br>            1）首先从注册中心获取provider的列表<br>            2）通过一定的策略选择其中一个节点<br>            3）再返回给<strong>restTemplate</strong>调用</p><p>接下来修改一下负载均衡的策略<br>    自定义负载均衡策略：<a href="http://cloud.spring.io/spring-cloud-static/Finchley.RELEASE/single/spring-cloud.html#_customizing_the_ribbon_client_by_setting_properties">http://cloud.spring.io/spring-cloud-static/Finchley.RELEASE/single/spring-cloud.html#_customizing_the_ribbon_client_by_setting_properties</a><br>    在配置文件yml里面，自定义负载均衡策略<br>        #自定义负载均衡策略</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">product<span class="token operator">-</span>service<span class="token operator">:</span>  ribbon<span class="token operator">:</span>    <span class="token class-name">NFLoadBalancerRuleClassName</span><span class="token operator">:</span> <span class="token class-name"><span class="token namespace">com<span class="token punctuation">.</span>netflix<span class="token punctuation">.</span>loadbalancer<span class="token punctuation">.</span></span>RandomRule</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span></span></code></pre><p>策略选择：<br>        1、如果每个机器配置一样，则建议不修改策略 (推荐)<br>        2、如果部分机器配置强，则可以改为 <strong>WeightedResponseTimeRule</strong></p><p><img src="https://img-blog.csdnimg.cn/20191208162507141.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>刷新页面:<br><img src="https://img-blog.csdnimg.cn/20191208162634813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>第二次刷新:8773端口<br><img src="https://img-blog.csdnimg.cn/20191208162806666.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>第三次刷新:8772端口:<br><img src="https://img-blog.csdnimg.cn/20191208162917868.png" alt="在这里插入图片描述"><br>至此,默认的负载均衡策略修改完毕(当然也可以在源码上打断点调试证明):</p><p><strong>二:微服务调用方式之feign</strong></p><p>Feign： 伪RPC客户端(本质还是用http)<br>        官方文档: <a href="https://cloud.spring.io/spring-cloud-openfeign/">https://cloud.spring.io/spring-cloud-openfeign/</a></p><p>1、使用feign步骤讲解（新旧版本依赖名称不一样）<br>加入依赖<br>启动类增加 <strong>@EnableFeignClients</strong><br>增加一个接口 并 <strong>@FeignClient(name=”product-service”)</strong><br>2、注意点：<br>            1、路径<br>            2、Http方法必须对应<br>            3、使用requestBody，应该使用@PostMapping<br>            4、多个参数的时候，通过@RequestParam（”id”) int id)方式调用<br>3.编码实战:</p><p>添加依赖:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"> <span class="token generics"><span class="token punctuation">&lt;</span>dependency<span class="token punctuation">></span></span> <span class="token generics"><span class="token punctuation">&lt;</span>groupId<span class="token punctuation">></span></span>org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token operator">&lt;</span><span class="token operator">/</span>groupId<span class="token operator">></span><span class="token generics"><span class="token punctuation">&lt;</span>artifactId<span class="token punctuation">></span></span>spring<span class="token operator">-</span>cloud<span class="token operator">-</span>starter<span class="token operator">-</span>openfeign<span class="token operator">&lt;</span><span class="token operator">/</span>artifactId<span class="token operator">></span><span class="token operator">&lt;</span><span class="token operator">/</span>dependency<span class="token operator">></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span></span></code></pre><p>新建service接口:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>erueka<span class="token punctuation">.</span>order_server<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>cloud<span class="token punctuation">.</span>openfeign<span class="token punctuation">.</span></span><span class="token class-name">FeignClient</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/8 21:29 */</span><span class="token annotation punctuation">@FeignClient</span><span class="token punctuation">(</span>name<span class="token operator">=</span><span class="token string">"product-service"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductClient</span> <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/api/v1/product/find"</span><span class="token punctuation">)</span>    <span class="token class-name">String</span> <span class="token function">findById</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>修改service接口:<br><img src="https://img-blog.csdnimg.cn/20191208215620813.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191208215653492.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br><strong>启动类:</strong><br><img src="https://img-blog.csdnimg.cn/20191208215756869.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/20191208220749478.png" alt="在这里插入图片描述"><br><strong>数据正常返回</strong></p><p>服务间的调用方式ribbon、feign选择</p><pre><code>    1、ribbon和feign两个的区别和选择        选择feign            默认集成了ribbon            写起来更加思路清晰和方便            采用注解方式进行配置，配置熔断等方式方便    2、超时配置        默认optons readtimeout是60，但是由于hystrix默认是1秒超时        #修改调用超时时间        feign:          client:            config:              default:                connectTimeout: 2000                readTimeout: 2000        模拟接口响应慢，线程睡眠新的方式          try &#123;                TimeUnit.SECONDS.sleep(1);            &#125; catch (InterruptedException e) &#123;                e.printStackTrace();            &#125;</code></pre><p><strong>GitHub项目:</strong> <a href="https://github.com/XT962464oo/Eureka_demo">https://github.com/XT962464oo/Eureka_demo</a></p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> ribbon </tag>
            
            <tag> feign </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>微服务SpringCloud入门实战(一)_ Eureka Server入门项目搭建</title>
      <link href="xt/f97.html"/>
      <url>xt/f97.html</url>
      
        <content type="html"><![CDATA[<h2 id="Eureka-Server入门项目搭建"><a href="#Eureka-Server入门项目搭建" class="headerlink" title="Eureka Server入门项目搭建"></a>Eureka Server入门项目搭建</h2><p>(有好多个月没有更新学习经历了,今天刚开始学习微服务架构,来更新一下.)<br>    <strong>单体应用缺点：</strong></p><ol><li>开发速度慢</li><li>启动时间长</li><li>依赖庞大<pre><code>......等等</code></pre></li></ol><p><strong>一:什么是微服务</strong></p><ol><li>微服务架构设计代表了一种架构设计思想，再配合上容器技术（如Docker），可以在程序开发上的流程、       部署、服务维护等各方面的效率得到很大提升。</li><li>微服务就是将一个单体架构的应用按业务划分为一个个的独立运行的程序即服务，它们之间通过 HTTP<br>协议进行通信（也可以采用消息队列来通信，如 RoocketMQ，Kafaka等），可以采用不同的编程语言，使用不同的存储技术，自动化部署（如Jenkins）减少人为控制，降低出错概率。服务数量越多，管理起来越复杂，因此采用集中化管理。例如 Eureka，Zookeeper等都是比较常见的服务集中化管理框架</li><li>………</li></ol><p><strong>二:微服务的好处</strong></p><ol><li>可以将一个庞大的单体架构的应用按业务切分为多个具有不同服务的程序应用,各自独立运行,每个服务都有一个定义清楚的边界，通过 RPC- 或者消息驱动API与外接沟通，单个微服务相比单体应用更容易开发和维护.</li><li>微服务架构使得每个微服务独立部署。加快部署速度,这样一来,每个服务都属于一个单独的个体,对服务的维护,升级,扩展等带来极大的便利</li><li>…..</li></ol><p><strong>三:微服务架构的不足之处</strong></p><ol><li>微服务应用是一个分布式系统，由此会带来分布式系统固有的复杂性.</li><li>多个服务之间的依赖问题,相关应用的升级以及修改等有可能会波及多个服务模块的修改.在以往单体应用中，只需要修改相关的模块便可，整合后一并部署。而微服务架构模式,修改服务模块时就需要考虑服务间的依赖关系</li><li>分布式系统—&gt;分布式事务问题</li><li>需要管理多个服务–&gt;服务治理</li></ol><p>另:<br>微服务核心知识 ：网关、服务发现注册、配置中心、链路追踪、负载均衡器、熔断…等</p><ol><li>网关：路由转发 + 过滤器<pre><code>        /api/v1/pruduct/      商品服务        /api/v1/order/        订单服务        /api/v1/user/         用户服务</code></pre></li><li>服务注册发现：调用和被调用方的信息维护</li><li>配置中心：管理配置，动态更新 application.properties</li><li>链路追踪：分析调用链路耗时<pre><code>    例子：下单-》查询商品服务获取商品价格-》查询用户信息-》保存数据库</code></pre></li><li>负载均衡器：分发负载</li><li>熔断：保护自己和被调用方</li></ol><p>常见的微服务框架</p><ol><li>consumer: 调用方</li><li>provider: 被调用方<pre><code>一个接口一般都会充当两个角色（不是同时充当）1、dubbo: zookeeper + dubbo + springmvc/springboot    官方地址：http://dubbo.apache.org/#!/?lang=zh-cn    配套        通信方式：rpc        注册中心：zookeper/redis        配置中心：diamond2、springcloud: 全家桶+轻松嵌入第三方组件(Netflix 奈飞)    官网：http://projects.spring.io/spring-cloud/    配套        通信方式：http restful        注册中心：eruka/consul        配置中心：config        断路器：hystrix        网关：zuul        分布式追踪系统：sleuth+zipkin</code></pre></li></ol><p><strong>刚开始学习,我这里使用的是Eureka</strong></p><p><strong>项目结构:</strong><br>  (我这里按照习惯,建的是”父子工程”,当然也可以新建两个独立工程,编辑器:IDEA)<img src="https://img-blog.csdnimg.cn/20191205232227951.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="项目结构"><br>  <strong>1.新建一个空白的父工程,src以及其他暂时用不着的东西可以先删除</strong><br>  (步骤略)<br>  <strong>2.新建第一个Module,用来做”注册中心”</strong><br>       <img src="https://img-blog.csdnimg.cn/20191205233311937.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>  入门项目,业务不多,依赖选择一个即可,项目创建好后的依赖:</p><pre class="line-numbers language-none"><code class="language-none">&lt;properties&gt;    &lt;java.version&gt;1.8&lt;&#x2F;java.version&gt;    &lt;spring-cloud.version&gt;Hoxton.RELEASE&lt;&#x2F;spring-cloud.version&gt;&lt;&#x2F;properties&gt;&lt;dependencies&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;        &lt;artifactId&gt;spring-cloud-starter-netflix-eureka-server&lt;&#x2F;artifactId&gt;    &lt;&#x2F;dependency&gt;    &lt;dependency&gt;        &lt;groupId&gt;org.springframework.boot&lt;&#x2F;groupId&gt;        &lt;artifactId&gt;spring-boot-starter-test&lt;&#x2F;artifactId&gt;        &lt;scope&gt;test&lt;&#x2F;scope&gt;        &lt;exclusions&gt;            &lt;exclusion&gt;                &lt;groupId&gt;org.junit.vintage&lt;&#x2F;groupId&gt;                &lt;artifactId&gt;junit-vintage-engine&lt;&#x2F;artifactId&gt;            &lt;&#x2F;exclusion&gt;        &lt;&#x2F;exclusions&gt;    &lt;&#x2F;dependency&gt;&lt;&#x2F;dependencies&gt;&lt;dependencyManagement&gt;    &lt;dependencies&gt;        &lt;dependency&gt;            &lt;groupId&gt;org.springframework.cloud&lt;&#x2F;groupId&gt;            &lt;artifactId&gt;spring-cloud-dependencies&lt;&#x2F;artifactId&gt;            &lt;version&gt;$&#123;spring-cloud.version&#125;&lt;&#x2F;version&gt;            &lt;type&gt;pom&lt;&#x2F;type&gt;            &lt;scope&gt;import&lt;&#x2F;scope&gt;        &lt;&#x2F;dependency&gt;    &lt;&#x2F;dependencies&gt;&lt;&#x2F;dependencyManagement&gt;<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p><strong>3.在启动类上添加注解:</strong>@EnableEurekaServer<br><img src="https://img-blog.csdnimg.cn/20191205235144635.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>4.添加配置(application.yml):</p><pre class="line-numbers language-bash" data-language="bash"><code class="language-bash">server:  port: <span class="token number">8761</span>eureka:  instance:    hostname: localhost  client:    <span class="token comment">#声明自己是服务端</span>    registerWithEureka: <span class="token boolean">false</span>    fetchRegistry: <span class="token boolean">false</span>    serviceUrl:      defaultZone: http://<span class="token variable">$&#123;eureka.instance.hostname&#125;</span><span class="token builtin class-name">:</span><span class="token variable">$&#123;server.port&#125;</span>/eureka/<span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>**5.启动服务:**方式跟平常启动sprinboot应用一样<br>浏览器输入:<a href="http://localhost:8761/">http://localhost:8761/</a><br>一个简单的”注册中心”创建完毕<br><img src="https://img-blog.csdnimg.cn/20191205235544824.png" alt="在这里插入图片描述"><br><img src="https://img-blog.csdnimg.cn/2019120523561782.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>6.创建第二个Module:商品服务<br>依赖选择:<br><img src="https://img-blog.csdnimg.cn/20191206000218821.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>7.分别创建实体类,service,controller;<br><img src="https://img-blog.csdnimg.cn/20191206000401827.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>实体类:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//Product.java</span><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>eureka<span class="token punctuation">.</span>product_server<span class="token punctuation">.</span>domain</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">lombok<span class="token punctuation">.</span></span><span class="token class-name">Data</span><span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/5 20:04 */</span><span class="token annotation punctuation">@Data</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">Product</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> id<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token class-name">String</span> name<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> price<span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token keyword">int</span> store<span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">,</span> <span class="token class-name">String</span> name<span class="token punctuation">,</span> <span class="token keyword">int</span> price<span class="token punctuation">,</span> <span class="token keyword">int</span> store<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>id <span class="token operator">=</span> id<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>name <span class="token operator">=</span> name<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>price <span class="token operator">=</span> price<span class="token punctuation">;</span>        <span class="token keyword">this</span><span class="token punctuation">.</span>store <span class="token operator">=</span> store<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span><span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>service接口:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token comment">//ProductService.java</span><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>eureka<span class="token punctuation">.</span>product_server<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>eureka<span class="token punctuation">.</span>product_server<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Product</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token class-name">List</span><span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/5 20:06 */</span><span class="token keyword">public</span> <span class="token keyword">interface</span> <span class="token class-name">ProductService</span> <span class="token punctuation">&#123;</span>    <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">></span></span> <span class="token class-name">ListProduct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token class-name">Product</span> <span class="token function">findById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>service接口实现类:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>eureka<span class="token punctuation">.</span>product_server<span class="token punctuation">.</span>service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>eureka<span class="token punctuation">.</span>product_server<span class="token punctuation">.</span>domain<span class="token punctuation">.</span></span><span class="token class-name">Product</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>stereotype<span class="token punctuation">.</span></span><span class="token class-name">Service</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">java<span class="token punctuation">.</span>util<span class="token punctuation">.</span></span><span class="token operator">*</span><span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/5 20:09 */</span><span class="token annotation punctuation">@Service</span><span class="token keyword">public</span> <span class="token keyword">class</span> <span class="token class-name">ProductServiceImpl</span> <span class="token keyword">implements</span> <span class="token class-name">ProductService</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token keyword">static</span> <span class="token class-name">Map</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Integer</span><span class="token punctuation">,</span><span class="token class-name">Product</span><span class="token punctuation">></span></span> daoMap <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">HashMap</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">static</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Product</span> p1 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token number">1</span><span class="token punctuation">,</span><span class="token string">"iphonex"</span><span class="token punctuation">,</span><span class="token number">9999</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Product</span> p2 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token number">2</span><span class="token punctuation">,</span><span class="token string">"冰箱"</span><span class="token punctuation">,</span><span class="token number">5342</span><span class="token punctuation">,</span> <span class="token number">19</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Product</span> p3 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token number">3</span><span class="token punctuation">,</span><span class="token string">"洗衣机"</span><span class="token punctuation">,</span><span class="token number">523</span><span class="token punctuation">,</span> <span class="token number">90</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Product</span> p4 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token number">4</span><span class="token punctuation">,</span><span class="token string">"电话"</span><span class="token punctuation">,</span><span class="token number">64345</span><span class="token punctuation">,</span> <span class="token number">150</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Product</span> p5 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token number">5</span><span class="token punctuation">,</span><span class="token string">"汽车"</span><span class="token punctuation">,</span><span class="token number">2345</span><span class="token punctuation">,</span> <span class="token number">140</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Product</span> p6 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token number">6</span><span class="token punctuation">,</span><span class="token string">"椅子"</span><span class="token punctuation">,</span><span class="token number">253</span><span class="token punctuation">,</span> <span class="token number">20</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">Product</span> p7 <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">Product</span><span class="token punctuation">(</span><span class="token number">7</span><span class="token punctuation">,</span><span class="token string">"java编程思想"</span><span class="token punctuation">,</span><span class="token number">2341</span><span class="token punctuation">,</span> <span class="token number">10</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        daoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>p1<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p1<span class="token punctuation">)</span><span class="token punctuation">;</span>        daoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>p2<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p2<span class="token punctuation">)</span><span class="token punctuation">;</span>        daoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>p3<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p3<span class="token punctuation">)</span><span class="token punctuation">;</span>        daoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>p4<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p4<span class="token punctuation">)</span><span class="token punctuation">;</span>        daoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>p5<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p5<span class="token punctuation">)</span><span class="token punctuation">;</span>        daoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>p6<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p6<span class="token punctuation">)</span><span class="token punctuation">;</span>        daoMap<span class="token punctuation">.</span><span class="token function">put</span><span class="token punctuation">(</span>p7<span class="token punctuation">.</span><span class="token function">getId</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">,</span>p7<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">></span></span> <span class="token class-name">ListProduct</span><span class="token punctuation">(</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token class-name">Collection</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">></span></span> values <span class="token operator">=</span> daoMap<span class="token punctuation">.</span><span class="token function">values</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token class-name">List</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token class-name">Product</span><span class="token punctuation">></span></span> products <span class="token operator">=</span> <span class="token keyword">new</span> <span class="token class-name">ArrayList</span><span class="token generics"><span class="token punctuation">&lt;</span><span class="token punctuation">></span></span><span class="token punctuation">(</span>values<span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> products<span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@Override</span>    <span class="token keyword">public</span> <span class="token class-name">Product</span> <span class="token function">findById</span><span class="token punctuation">(</span><span class="token keyword">int</span> id<span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> daoMap<span class="token punctuation">.</span><span class="token function">get</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>controller:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java"><span class="token keyword">package</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>eureka<span class="token punctuation">.</span>product_server<span class="token punctuation">.</span>controller</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">com<span class="token punctuation">.</span>xt<span class="token punctuation">.</span>tools<span class="token punctuation">.</span>eureka<span class="token punctuation">.</span>product_server<span class="token punctuation">.</span>service<span class="token punctuation">.</span></span><span class="token class-name">ProductService</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>beans<span class="token punctuation">.</span>factory<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">Autowired</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">PathVariable</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestMapping</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RequestParam</span><span class="token punctuation">;</span><span class="token keyword">import</span> <span class="token namespace">org<span class="token punctuation">.</span>springframework<span class="token punctuation">.</span>web<span class="token punctuation">.</span>bind<span class="token punctuation">.</span>annotation<span class="token punctuation">.</span></span><span class="token class-name">RestController</span><span class="token punctuation">;</span><span class="token comment">/* * @description: 说明 * @author: 小谭 * @date: 2019/12/5 20:03 */</span><span class="token annotation punctuation">@RestController</span><span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"/api/v1/product"</span><span class="token punctuation">)</span><span class="token keyword">public</span> <span class="token keyword">class</span> productController <span class="token punctuation">&#123;</span>    <span class="token annotation punctuation">@Autowired</span>    <span class="token keyword">private</span> <span class="token class-name">ProductService</span> productService<span class="token punctuation">;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"list"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token class-name">List</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> <span class="token class-name"><span class="token namespace">productService<span class="token punctuation">.</span></span>ListProduct</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token annotation punctuation">@RequestMapping</span><span class="token punctuation">(</span><span class="token string">"find"</span><span class="token punctuation">)</span>    <span class="token keyword">public</span> <span class="token class-name">Object</span> <span class="token function">product</span><span class="token punctuation">(</span><span class="token annotation punctuation">@RequestParam</span><span class="token punctuation">(</span><span class="token string">"id"</span><span class="token punctuation">)</span> <span class="token keyword">int</span> id<span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token keyword">return</span> productService<span class="token punctuation">.</span><span class="token function">findById</span><span class="token punctuation">(</span>id<span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>最后,配置文件:</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">server<span class="token operator">:</span>  port<span class="token operator">:</span> <span class="token number">8771</span>#指定spring应用名称spring<span class="token operator">:</span>  application<span class="token operator">:</span>    name<span class="token operator">:</span> product<span class="token operator">-</span>server#指定注册中心地址eureka<span class="token operator">:</span>  client<span class="token operator">:</span>    serviceUrl<span class="token operator">:</span>      defaultZone<span class="token operator">:</span> http<span class="token operator">:</span><span class="token operator">/</span><span class="token operator">/</span>localhost<span class="token operator">:</span><span class="token number">8761</span><span class="token operator">/</span>eureka<span class="token operator">/</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>现在可以启动服务了,至于这个Module的启动类的注解:@EnableEurekaClient,可加可不加<br>(1):<a href="http://localhost:8771/api/v1/product/list">http://localhost:8771/api/v1/product/list</a></p><p><img src="https://img-blog.csdnimg.cn/20191206001939700.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>(2):<a href="http://localhost:8771/api/v1/product/find?id=2">http://localhost:8771/api/v1/product/find?id=2</a><br><img src="https://img-blog.csdnimg.cn/20191206002008827.png" alt="在这里插入图片描述"><br>有数据返回,功能一切正常,再来刷新一下注册中心:<br><img src="https://img-blog.csdnimg.cn/20191206002147342.png?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>与开始相比,页面多出了一些东西,目前,商品服务已成功注册进去了,</p><p>问题一：eureka管理后台出现一串红色字体：是警告，说明有服务上线率低</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">EMERGENCY<span class="token operator">!</span> EUREKA MAY BE INCORRECTLY CLAIMING INSTANCES ARE UP WHEN THEY'RE NOT<span class="token punctuation">.</span> RENEWALS ARE LESSER THAN THRESHOLD AND HENCE THE INSTANCES ARE NOT BEING EXPIRED JUST TO BE SAFE<span class="token punctuation">.</span><span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>关闭检查方法：eureka服务端配置文件加入</p><pre class="line-numbers language-java" data-language="java"><code class="language-java">server<span class="token operator">:</span>enable<span class="token operator">-</span>self<span class="token operator">-</span>preservation<span class="token operator">:</span> <span class="token boolean">false</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span></span></code></pre><p>注意：自我保护模式禁止关闭，默认是开启状态true</p><p>问题二：为什么只加一个注册中心地址，就可以注册<br><strong>官方解释(<a href="https://cloud.spring.io/spring-cloud-netflix/reference/html/#service-discovery-eureka-clients">https://cloud.spring.io/spring-cloud-netflix/reference/html/#service-discovery-eureka-clients</a>):</strong><br>By having spring-cloud-starter-netflix-eureka-client on the classpath, your application automatically registers with the Eureka Server. Configuration is required to locate the Eureka server, as shown in the following example:</p><p><strong>google翻译:</strong><br>通过在类路径上使用spring-cloud-starter-netflix-eureka-client，您的应用程序将自动向Eureka Server注册。需要配置以找到Eureka服务器，如以下示例所示</p><p>github项目: <a href="https://github.com/XT962464oo/Eureka_demo">https://github.com/XT962464oo/Eureka_demo</a></p>]]></content>
      
      
      <categories>
          
          <category> 微服务 </category>
          
          <category> SpringCloud </category>
          
      </categories>
      
      
        <tags>
            
            <tag> SpringCloud </tag>
            
            <tag> Eureka </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>php给微信公众号接入聊天机器人程序+采坑记录</title>
      <link href="xt/8266.html"/>
      <url>xt/8266.html</url>
      
        <content type="html"><![CDATA[<h2 id="php给微信公众号接入聊天机器人程序"><a href="#php给微信公众号接入聊天机器人程序" class="headerlink" title="php给微信公众号接入聊天机器人程序"></a>php给微信公众号接入聊天机器人程序</h2><p>今天逛了下我的公众号,突然心血来潮,想添加个自动聊天功能,于是……..动手..!!<br>主要用到的api:</p><ol><li>图灵机器人api</li><li>青云客智能聊天机器人API</li><li>茉莉机器人API</li></ol><p>至于为什么要用三个,因为我之前的图灵机器人好像”不行了”,不知道出了啥问题,同时图灵机器人免费版的有调用次数限制,就打算放弃图灵,去寻找其他api,<br>就找到了其余两个,业务逻辑写好后,逐渐发现后两个api还不够智能(这点纯属个人看法),于是又重新拾起图灵,折腾了一番后终于搞定了,当时接入的图灵报错主要错误有两个:</p><ol><li>json数据错误</li><li>返回  “加密方式错误”</li></ol><p>对于返回  “加密方式错误”的情况,我没有多想,直接删除当前的机器人,重新新建一个,但是后来百度了一下,发现原来是api密钥开关打开了,关掉便可.<br><img src="https://img-blog.csdnimg.cn/20190430220707209.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>整个过程觉得最恶心的就是提交的json数据了,这玩意儿搞了我好多个小时呢.返回的结果只有一个</p><pre class="line-numbers language-none"><code class="language-none">&#123;&#39;intent&#39;: &#123;&#39;code&#39;: 4000&#125;, &#39;results&#39;: [&#123;&#39;groupType&#39;: 0, &#39;resultType&#39;: &#39;text&#39;, &#39;values&#39;: &#123;&#39;text&#39;: &#39;请求参数缺失或格式错误!&#39;&#125;&#125;]&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><p>开始以为是参数错了或者少了,于是我再用python试了一遍,完美通过<br><img src="https://img-blog.csdnimg.cn/20190430221220552.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>这是我的php</p><pre class="line-numbers language-php" data-language="php"><code class="language-php">    <span class="token variable">$param</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&#123;'perception': &#123;    'inputText': &#123;        'text': <span class="token interpolation"><span class="token variable">$word</span></span>,    &#125;&#125;,'userInfo': &#123;    'apiKey': <span class="token interpolation"><span class="token variable">$appkey</span></span>,    'userId': 'robot1',    &#125;&#125;"</span><span class="token punctuation">;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>这下证明参数是没错的,又试了json字符串转对象,转数组对象,数组转………等等各种尝试都不行,终于&gt;&gt;&gt;<br><img src="https://img-blog.csdnimg.cn/20190430221713311.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"><br>明显加了  “{}” 和单引号,于是乎…<br><img src="https://img-blog.csdnimg.cn/20190430221940803.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20190430222029815." alt="在这里插入图片描述"></p><p>上面便是我今日主要采坑记录….下面接入到我的公众号去<br>这次功能开发承接到上次开发的公众号.</p><p>检索微信关键字无匹配后,调用机器人<br><img src="https://img-blog.csdnimg.cn/20190430222407991.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>新建robot类,写个getText方法,实例化分情况实例化三个api对象,优先实现图灵机器人,一旦图灵机器人调用次数用完,返回错误代码err,接着使用其余的机器人api,以此类推(代码写得有点不好,自学新手,大佬有更好的建议,欢迎来吐槽哈)<br><img src="https://img-blog.csdnimg.cn/20190430225143584.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><strong>图灵机器人api</strong></p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span><span class="token keyword">class</span> <span class="token class-name">tuling_robot</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">private</span> <span class="token variable">$api</span><span class="token operator">=</span><span class="token string double-quoted-string">"http://openapi.tuling123.com/openapi/api/v2"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$robot1</span><span class="token operator">=</span><span class="token string double-quoted-string">"-----------appkey1--------------"</span><span class="token punctuation">;</span>    <span class="token keyword">private</span> <span class="token variable">$robot2</span><span class="token operator">=</span><span class="token string double-quoted-string">"-----------appkey2--------------"</span><span class="token punctuation">;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token variable">$word</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span>        <span class="token variable">$param</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token variable">$word</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">robot1</span><span class="token punctuation">)</span><span class="token punctuation">;</span> <span class="token comment">//拼接json数据</span>        <span class="token variable">$json</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">Http_post</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$code</span><span class="token operator">=</span><span class="token variable">$json</span><span class="token operator">-></span><span class="token property">intent</span><span class="token operator">-></span><span class="token property">code</span><span class="token punctuation">;</span><span class="token comment">//响应码</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$code</span><span class="token operator">==</span><span class="token string double-quoted-string">"4003"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//4003  调用次数用完</span>            <span class="token variable">$param</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">getParam</span><span class="token punctuation">(</span><span class="token variable">$word</span><span class="token punctuation">,</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">robot2</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$json</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">Http_post</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token variable">$code</span><span class="token operator">=</span><span class="token variable">$json</span><span class="token operator">-></span><span class="token property">intent</span><span class="token operator">-></span><span class="token property">code</span><span class="token punctuation">;</span><span class="token comment">//响应码</span>            <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$code</span><span class="token operator">==</span><span class="token string double-quoted-string">"4003"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">//4003  调用次数用完</span>                <span class="token variable">$contentStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$json</span><span class="token operator">-></span><span class="token property">results</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">values</span><span class="token operator">-></span><span class="token property">text</span><span class="token punctuation">;</span><span class="token comment">//回复内容</span>                <span class="token keyword">return</span> <span class="token variable">$contentStr</span><span class="token punctuation">;</span>            <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>                <span class="token keyword">return</span> <span class="token string double-quoted-string">"err"</span><span class="token punctuation">;</span> <span class="token comment">//两个机器人调用次数全都用完</span>            <span class="token punctuation">&#125;</span>        <span class="token punctuation">&#125;</span><span class="token keyword">elseif</span> <span class="token punctuation">(</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"5000"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"6000"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4000"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4001"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4002"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4003"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4005"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4007"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4100"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4200"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4300"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4400"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4500"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4600"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"4602"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"7002"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"8008"</span><span class="token operator">&amp;&amp;</span><span class="token variable">$code</span><span class="token operator">!=</span><span class="token string double-quoted-string">"0"</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>  <span class="token comment">//各种错误代码,因为我发现调用api返回的code,不一定每次都相同</span>            <span class="token keyword">return</span> <span class="token variable">$contentStr</span> <span class="token operator">=</span> <span class="token punctuation">(</span><span class="token variable">$json</span><span class="token operator">-></span><span class="token property">results</span><span class="token punctuation">)</span><span class="token punctuation">[</span><span class="token number">0</span><span class="token punctuation">]</span><span class="token operator">-></span><span class="token property">values</span><span class="token operator">-></span><span class="token property">text</span><span class="token punctuation">;</span><span class="token comment">//回复内容</span>        <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>            <span class="token keyword">return</span> <span class="token string double-quoted-string">"err"</span><span class="token punctuation">;</span> <span class="token comment">//其他错误</span>        <span class="token punctuation">&#125;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getParam</span><span class="token punctuation">(</span><span class="token variable">$word</span><span class="token punctuation">,</span><span class="token variable">$appkey</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//拼接参数</span>        <span class="token variable">$param</span> <span class="token operator">=</span> <span class="token string double-quoted-string">"&#123;    'perception': &#123;        'inputText': &#123;            'text': '<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$word</span><span class="token punctuation">&#125;</span></span>',        &#125;    &#125;,    'userInfo': &#123;        'apiKey': '<span class="token interpolation"><span class="token punctuation">&#123;</span><span class="token variable">$appkey</span><span class="token punctuation">&#125;</span></span>',        'userId': 'robot1',        &#125;    &#125;"</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$param</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">Http_post</span><span class="token punctuation">(</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span> <span class="token comment">//发起网络请求</span>        <span class="token comment">// 初始化curl</span>        <span class="token variable">$curl</span> <span class="token operator">=</span> <span class="token function">curl_init</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 请求地址,</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_URL</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"http://openapi.tuling123.com/openapi/api/v2"</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// POST请求</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_POST</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 发送POST请求时传递的参数或数据</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_POSTFIELDS</span><span class="token punctuation">,</span><span class="token variable">$param</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 设置捕获的字符串内容返回但不输出</span>        <span class="token function">curl_setopt</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">,</span><span class="token constant">CURLOPT_RETURNTRANSFER</span><span class="token punctuation">,</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 执行并接收返回的json格式字符串内容</span>        <span class="token variable">$jsonstr</span> <span class="token operator">=</span> <span class="token function">curl_exec</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token function">curl_close</span><span class="token punctuation">(</span><span class="token variable">$curl</span><span class="token punctuation">)</span><span class="token punctuation">;</span><span class="token comment">// 转化为json对象</span>        <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$jsonstr</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token keyword">return</span> <span class="token variable">$json</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>  <strong>青云客智能聊天机器人API</strong><br>  这个api目前没有apikey,貌似只需要关键字,然后一个get请求搞定,这点个人就觉得很不错,唯一缺点就是不够图灵智能,响应速度也不够图灵快<br>  这里用QueryList发起网络请求,主要是因为我当初自学php时,百度找php网络请求和爬虫时看到这个,就学习了一波,公众号起初就是用QueryList发送网络请求的,</p><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token php language-php"><span class="token delimiter important">&lt;?php</span>    <span class="token keyword">require_once</span> <span class="token punctuation">(</span><span class="token function">dirname</span><span class="token punctuation">(</span><span class="token constant">__FILE__</span><span class="token punctuation">)</span><span class="token operator">.</span><span class="token string single-quoted-string">'/../QueryList/vendor/autoload.php'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>    <span class="token keyword">use</span> <span class="token package">QL<span class="token punctuation">\</span>QueryList</span><span class="token punctuation">;</span><span class="token keyword">class</span> <span class="token class-name">qingyun_robot</span> <span class="token punctuation">&#123;</span>    <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token variable">$word</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>        <span class="token variable">$text</span><span class="token operator">=</span><span class="token string double-quoted-string">"404"</span><span class="token punctuation">;</span>        <span class="token variable">$api</span><span class="token operator">=</span><span class="token string double-quoted-string">"http://api.qingyunke.com/api.php?key=free&amp;appid=0&amp;msg="</span><span class="token operator">.</span><span class="token variable">$word</span><span class="token punctuation">;</span>        <span class="token variable">$html</span><span class="token operator">=</span><span class="token class-name static-context">QueryList</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$api</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">getHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$json</span><span class="token operator">=</span><span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">)</span><span class="token punctuation">;</span>        <span class="token variable">$result</span><span class="token operator">=</span><span class="token variable">$json</span><span class="token operator">-></span><span class="token property">result</span><span class="token punctuation">;</span>        <span class="token variable">$content</span><span class="token operator">=</span><span class="token variable">$json</span><span class="token operator">-></span><span class="token property">content</span><span class="token punctuation">;</span>        <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token variable">$result</span><span class="token operator">==</span><span class="token number">0</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>            <span class="token variable">$text</span><span class="token operator">=</span><span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&#123;br&#125;"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">"\n"</span><span class="token punctuation">,</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>            <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>        <span class="token punctuation">&#125;</span>        <span class="token keyword">return</span> <span class="token variable">$text</span><span class="token punctuation">;</span>    <span class="token punctuation">&#125;</span><span class="token punctuation">&#125;</span></span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p> <strong>茉莉机器人API</strong><br> 这个用起来稍微有点麻烦,因为他有来两种返回结果,一种是纯文本,一种是json,只有特定的关键字才会返回json,其余一律返回文本,第二种中返回的结果除了是个json之外,他的value都是经过Unicode编码过的,在python中直接将整个json进行解码是可以的,但是到了php就不行了,这里我将他拆开分别进行解码成中文<br> 这是经过编码的返回结果:</p><pre class="line-numbers language-none"><code class="language-none">﻿&#123;&quot;title&quot;:&quot;\u673a\u4f1a\u662f\u81ea\u5df1\u521b\u9020\u7684&quot;,&quot;content&quot;:&quot;\u53f8\u9a6c\u5149\u62cd\u62cd\u738b\u5b89\u77f3\u7684\u80a9\u8180\uff1a\u201c\u4ecb\u752b\uff0c\u8ddf\u6211\u6597\uff1f\u4f60\u8fd8\u662f\u592a\u5355\u7eaf\u4e86\u3002\u201d\r\n\u738b\u5b89\u77f3\u6de1\u5b9a\u5730\u56de\u51fb\uff1a\u201c\u6709\u4ec0\u4e48\u4e86\u4e0d\u8d77\u7684\uff1f\u4e0d\u5c31\u662f\u7838\u4e2a\u6c34\u7f38\u561b\uff1f\r\n\u6362\u4e86\u6211\u4e5f\u4e00\u5b9a\u4f1a\u8fd9\u4e48\u505a\uff0c\u6211\u548c\u4f60\u6bd4\uff0c\u53ea\u662f\u5c11\u4e00\u4e2a\u673a\u4f1a\u7f62\u4e86\u3002\u201d\r\n\u53f8\u9a6c\u5149\u773c\u4e2d\u5c04\u51fa\u4e24\u9053\u5bd2\u5149\uff1a\u201c\u673a\u4f1a\uff0c\u662f\u81ea\u5df1\u521b\u9020\u7684\u3002\u4f60\u53ea\u77e5\u9053\u8001\u592b\u7838\u7f38\uff0c\r\n\u5374\u4e0d\u77e5\u9053\u90a3\u5b69\u5b50\u662f\u600e\u4e48\u6389\u8fdb\u53bb\u7684\u5427\uff1f\u201d&quot;&#125;<span aria-hidden="true" class="line-numbers-rows"><span></span></span></code></pre><pre class="line-numbers language-php" data-language="php"><code class="language-php"><span class="token keyword">class</span> liliRobot<span class="token punctuation">&#123;</span>      <span class="token keyword">private</span>  <span class="token variable">$api</span><span class="token operator">=</span><span class="token string double-quoted-string">"http://i.itpk.cn/api.php?question=%s&amp;api_key=自己的api_key&amp;api_secret=自己的api_secret"</span><span class="token punctuation">;</span>      <span class="token keyword">public</span> <span class="token keyword">function</span> <span class="token function">getText</span><span class="token punctuation">(</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>          <span class="token variable">$api</span><span class="token operator">=</span><span class="token function">sprintf</span><span class="token punctuation">(</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token property">api</span><span class="token punctuation">,</span><span class="token variable">$text</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token variable">$html</span><span class="token operator">=</span><span class="token class-name static-context">QueryList</span><span class="token operator">::</span><span class="token function">get</span><span class="token punctuation">(</span><span class="token variable">$api</span><span class="token punctuation">)</span><span class="token operator">-></span><span class="token function">getHtml</span><span class="token punctuation">(</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span> <span class="token punctuation">(</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'&#123;"title":"'</span><span class="token punctuation">)</span><span class="token operator">!==</span><span class="token constant boolean">false</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span>              <span class="token variable">$title</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get_between</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'&#123;"title":"'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'","content":"'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token variable">$content</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">get_between</span><span class="token punctuation">(</span><span class="token variable">$html</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'","content":"'</span><span class="token punctuation">,</span><span class="token string single-quoted-string">'"&#125;'</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token variable">$title</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">unicodeDecode</span><span class="token punctuation">(</span><span class="token variable">$title</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token variable">$content</span><span class="token operator">=</span><span class="token variable">$this</span><span class="token operator">-></span><span class="token function">unicodeDecode</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">;</span>              <span class="token keyword">return</span> <span class="token function">str_replace</span><span class="token punctuation">(</span><span class="token string double-quoted-string">"&amp;nbsp"</span><span class="token punctuation">,</span><span class="token string double-quoted-string">""</span><span class="token punctuation">,</span><span class="token function">trim</span><span class="token punctuation">(</span><span class="token variable">$content</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span><span class="token keyword">else</span><span class="token punctuation">&#123;</span>              <span class="token keyword">return</span> <span class="token variable">$html</span><span class="token punctuation">;</span>          <span class="token punctuation">&#125;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">function</span> <span class="token function">get_between</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token variable">$start</span><span class="token punctuation">,</span> <span class="token variable">$end</span><span class="token punctuation">)</span> <span class="token punctuation">&#123;</span> <span class="token comment">//截取字符串,将json字符串的title和content分别截取出来解码</span>          <span class="token variable">$substr</span> <span class="token operator">=</span> <span class="token function">substr</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$start</span><span class="token punctuation">)</span><span class="token operator">+</span><span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token variable">$start</span><span class="token punctuation">)</span><span class="token punctuation">,</span><span class="token punctuation">(</span><span class="token function">strlen</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">)</span> <span class="token operator">-</span> <span class="token function">strpos</span><span class="token punctuation">(</span><span class="token variable">$input</span><span class="token punctuation">,</span> <span class="token variable">$end</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token operator">*</span><span class="token punctuation">(</span><span class="token operator">-</span><span class="token number">1</span><span class="token punctuation">)</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token variable">$substr</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>      <span class="token keyword">function</span> <span class="token function">unicodeDecode</span><span class="token punctuation">(</span><span class="token variable">$unicode_str</span><span class="token punctuation">)</span><span class="token punctuation">&#123;</span><span class="token comment">//转换编码</span>          <span class="token variable">$json</span> <span class="token operator">=</span> <span class="token string single-quoted-string">'&#123;"str":"'</span><span class="token operator">.</span><span class="token variable">$unicode_str</span><span class="token operator">.</span><span class="token string single-quoted-string">'"&#125;'</span><span class="token punctuation">;</span>          <span class="token variable">$arr</span> <span class="token operator">=</span> <span class="token function">json_decode</span><span class="token punctuation">(</span><span class="token variable">$json</span><span class="token punctuation">,</span><span class="token constant boolean">true</span><span class="token punctuation">)</span><span class="token punctuation">;</span>          <span class="token keyword">if</span><span class="token punctuation">(</span><span class="token keyword">empty</span><span class="token punctuation">(</span><span class="token variable">$arr</span><span class="token punctuation">)</span><span class="token punctuation">)</span> <span class="token keyword">return</span> <span class="token string single-quoted-string">''</span><span class="token punctuation">;</span>          <span class="token keyword">return</span> <span class="token variable">$arr</span><span class="token punctuation">[</span><span class="token string single-quoted-string">'str'</span><span class="token punctuation">]</span><span class="token punctuation">;</span>      <span class="token punctuation">&#125;</span>  <span class="token punctuation">&#125;</span><span aria-hidden="true" class="line-numbers-rows"><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span><span></span></span></code></pre><p>so…三个api调用代码都已经写好了,在外面调用即可,……<br>运行效果</p><p><img src="https://img-blog.csdnimg.cn/20190430231026695.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20190430231111799.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p><img src="https://img-blog.csdnimg.cn/20190430231200303.?x-oss-process=image/watermark,type_ZmFuZ3poZW5naGVpdGk,shadow_10,text_aHR0cHM6Ly9ibG9nLmNzZG4ubmV0L3FxXzQwNzU4NTM1,size_16,color_FFFFFF,t_70" alt="在这里插入图片描述"></p><p>好了,目前到这了,代码比较烂,有大佬有更好的建议的,欢迎来吐槽,哈哈</p><p><img src="https://img-blog.csdnimg.cn/img_convert/24f75364fd9bca643cde8739dd79e7b4.gif" alt="在这里插入图片描述"></p>]]></content>
      
      
      <categories>
          
          <category> PHP </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 微信公众号 </tag>
            
            <tag> 聊天机器人 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
